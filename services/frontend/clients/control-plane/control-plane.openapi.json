{
  "openapi": "3.0.3",
  "info": {
    "title": "Platformatic DB",
    "description": "Exposing a SQL database as REST",
    "version": "1.0.0"
  },
  "components": {
    "schemas": {
      "Taxonomy": {
        "title": "Taxonomy",
        "description": "A Taxonomy",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "main": {
            "type": "boolean",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true,
            "enum": [
              "started",
              "stopped"
            ]
          },
          "stage": {
            "type": "string",
            "nullable": true,
            "enum": [
              "closed",
              "merged",
              "opened"
            ]
          },
          "closedAt": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaxonomyInput": {
        "title": "TaxonomyInput",
        "description": "A Taxonomy",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "main": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "started",
              "stopped"
            ]
          },
          "stage": {
            "type": "string",
            "enum": [
              "closed",
              "merged",
              "opened"
            ]
          },
          "closedAt": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "required": [
          "main",
          "name",
          "stage",
          "status"
        ]
      },
      "TaxonomiesApplicationsChange": {
        "title": "TaxonomiesApplicationsChange",
        "description": "A TaxonomiesApplicationsChange",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "taxonomyId": {
            "type": "string",
            "nullable": true
          },
          "applicationId": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaxonomiesApplicationsChangeInput": {
        "title": "TaxonomiesApplicationsChangeInput",
        "description": "A TaxonomiesApplicationsChange",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "taxonomyId": {
            "type": "string"
          },
          "applicationId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "required": [
          "applicationId",
          "taxonomyId"
        ]
      },
      "Entrypoint": {
        "title": "Entrypoint",
        "description": "A Entrypoint",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "taxonomyId": {
            "type": "string",
            "nullable": true
          },
          "applicationId": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EntrypointInput": {
        "title": "EntrypointInput",
        "description": "A Entrypoint",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "taxonomyId": {
            "type": "string"
          },
          "applicationId": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "required": [
          "applicationId",
          "path",
          "taxonomyId"
        ]
      },
      "ApplicationState": {
        "title": "ApplicationState",
        "description": "A ApplicationState",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "applicationId": {
            "type": "string",
            "nullable": true
          },
          "pltVersion": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "object",
            "additionalProperties": true,
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationStateInput": {
        "title": "ApplicationStateInput",
        "description": "A ApplicationState",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "applicationId": {
            "type": "string"
          },
          "pltVersion": {
            "type": "string"
          },
          "state": {
            "type": "object",
            "additionalProperties": true
          },
          "createdAt": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "required": [
          "applicationId",
          "pltVersion",
          "state"
        ]
      },
      "Deployment": {
        "title": "Deployment",
        "description": "A Deployment",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "taxonomyId": {
            "type": "string",
            "nullable": true
          },
          "generationId": {
            "type": "string",
            "nullable": true
          },
          "applicationId": {
            "type": "string",
            "nullable": true
          },
          "applicationStateId": {
            "type": "string",
            "nullable": true
          },
          "bundleId": {
            "type": "string",
            "nullable": true
          },
          "machineId": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "nullable": true
          },
          "deploymentSettingsId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true,
            "enum": [
              "failed",
              "started",
              "starting"
            ]
          }
        },
        "additionalProperties": false
      },
      "DeploymentInput": {
        "title": "DeploymentInput",
        "description": "A Deployment",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "taxonomyId": {
            "type": "string"
          },
          "generationId": {
            "type": "string"
          },
          "applicationId": {
            "type": "string"
          },
          "applicationStateId": {
            "type": "string",
            "nullable": true
          },
          "bundleId": {
            "type": "string"
          },
          "machineId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "nullable": true
          },
          "deploymentSettingsId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "failed",
              "started",
              "starting"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "applicationId",
          "bundleId",
          "deploymentSettingsId",
          "generationId",
          "machineId",
          "status",
          "taxonomyId"
        ]
      },
      "Graph": {
        "title": "Graph",
        "description": "A Graph",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "taxonomyId": {
            "type": "string",
            "nullable": true
          },
          "generationId": {
            "type": "string",
            "nullable": true
          },
          "graph": {
            "type": "object",
            "additionalProperties": true,
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GraphInput": {
        "title": "GraphInput",
        "description": "A Graph",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "taxonomyId": {
            "type": "string"
          },
          "generationId": {
            "type": "string"
          },
          "graph": {
            "type": "object",
            "additionalProperties": true
          },
          "createdAt": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "required": [
          "generationId",
          "graph",
          "taxonomyId"
        ]
      },
      "Generation": {
        "title": "Generation",
        "description": "A Generation",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "taxonomyId": {
            "type": "string",
            "nullable": true
          },
          "mainIteration": {
            "type": "integer",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true,
            "enum": [
              "empty",
              "failed",
              "started",
              "starting"
            ]
          }
        },
        "additionalProperties": false
      },
      "GenerationInput": {
        "title": "GenerationInput",
        "description": "A Generation",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "taxonomyId": {
            "type": "string"
          },
          "mainIteration": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": [
              "empty",
              "failed",
              "started",
              "starting"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "mainIteration",
          "status",
          "taxonomyId"
        ]
      },
      "Environment": {
        "title": "Environment",
        "description": "A Environment",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "taxonomyId": {
            "type": "string",
            "nullable": true
          },
          "applicationId": {
            "type": "string",
            "nullable": true
          },
          "secretsStorageProvider": {
            "type": "string",
            "nullable": true,
            "enum": [
              "plaintext",
              "vault"
            ]
          },
          "secretsKey": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "nullable": true
          },
          "deleted": {
            "type": "boolean",
            "nullable": true
          },
          "deletedAt": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EnvironmentInput": {
        "title": "EnvironmentInput",
        "description": "A Environment",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "taxonomyId": {
            "type": "string"
          },
          "applicationId": {
            "type": "string",
            "nullable": true
          },
          "secretsStorageProvider": {
            "type": "string",
            "enum": [
              "plaintext",
              "vault"
            ]
          },
          "secretsKey": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "nullable": true
          },
          "deleted": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "required": [
          "deleted",
          "secretsStorageProvider",
          "taxonomyId"
        ]
      },
      "DeploymentSetting": {
        "title": "DeploymentSetting",
        "description": "A DeploymentSetting",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "applicationId": {
            "type": "string",
            "nullable": true
          },
          "threads": {
            "type": "integer",
            "nullable": true
          },
          "cores": {
            "type": "integer",
            "nullable": true
          },
          "memory": {
            "type": "integer",
            "nullable": true
          },
          "heap": {
            "type": "integer",
            "nullable": true
          },
          "services": {
            "type": "object",
            "additionalProperties": true,
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeploymentSettingInput": {
        "title": "DeploymentSettingInput",
        "description": "A DeploymentSetting",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "applicationId": {
            "type": "string"
          },
          "threads": {
            "type": "integer"
          },
          "cores": {
            "type": "integer"
          },
          "memory": {
            "type": "integer"
          },
          "heap": {
            "type": "integer"
          },
          "services": {
            "type": "object",
            "additionalProperties": true,
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "required": [
          "applicationId",
          "cores",
          "heap",
          "memory",
          "threads"
        ]
      },
      "ApplicationSetting": {
        "title": "ApplicationSetting",
        "description": "A ApplicationSetting",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "applicationId": {
            "type": "string",
            "nullable": true
          },
          "threads": {
            "type": "integer",
            "nullable": true
          },
          "cores": {
            "type": "integer",
            "nullable": true
          },
          "memory": {
            "type": "integer",
            "nullable": true
          },
          "heap": {
            "type": "integer",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "nullable": true
          },
          "services": {
            "type": "object",
            "additionalProperties": true,
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationSettingInput": {
        "title": "ApplicationSettingInput",
        "description": "A ApplicationSetting",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "applicationId": {
            "type": "string"
          },
          "threads": {
            "type": "integer"
          },
          "cores": {
            "type": "integer"
          },
          "memory": {
            "type": "integer"
          },
          "heap": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "nullable": true
          },
          "services": {
            "type": "object",
            "additionalProperties": true,
            "nullable": true
          }
        },
        "additionalProperties": false,
        "required": [
          "applicationId",
          "cores",
          "heap",
          "memory",
          "threads"
        ]
      },
      "Application": {
        "title": "Application",
        "description": "A Application",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "nullable": true
          },
          "deleted": {
            "type": "boolean",
            "nullable": true
          },
          "deletedAt": {
            "type": "string",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationInput": {
        "title": "ApplicationInput",
        "description": "A Application",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "nullable": true
          },
          "deleted": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "string",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "required": [
          "deleted",
          "name"
        ]
      },
      "NetworkSetting": {
        "title": "NetworkSetting",
        "description": "A NetworkSetting",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "taxonomyId": {
            "type": "string",
            "nullable": true
          },
          "generationId": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "type": "object",
            "additionalProperties": true,
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NetworkSettingInput": {
        "title": "NetworkSettingInput",
        "description": "A NetworkSetting",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "taxonomyId": {
            "type": "string"
          },
          "generationId": {
            "type": "string"
          },
          "settings": {
            "type": "object",
            "additionalProperties": true
          },
          "createdAt": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "required": [
          "generationId",
          "settings",
          "taxonomyId"
        ]
      }
    }
  },
  "paths": {
    "/taxonomies/": {
      "get": {
        "operationId": "getTaxonomies",
        "summary": "Get taxonomies.",
        "tags": [
          "taxonomies"
        ],
        "description": "Fetch taxonomies from the database.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Limit will be applied by default if not passed. If the provided value exceeds the maximum allowed value a validation error will be thrown"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "totalCount",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "closedAt",
                  "createdAt",
                  "id",
                  "main",
                  "name",
                  "stage",
                  "status"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.closedAt.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.closedAt.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.closedAt.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.closedAt.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.closedAt.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.closedAt.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.closedAt.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.closedAt.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.closedAt.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.closedAt.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.closedAt.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.closedAt.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.closedAt.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.main.eq",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.main.neq",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.main.gt",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.main.gte",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.main.lt",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.main.lte",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.main.like",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.main.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.main.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.main.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.main.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.main.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.main.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "closed",
                "merged",
                "opened"
              ]
            },
            "in": "query",
            "name": "where.stage.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "closed",
                "merged",
                "opened"
              ]
            },
            "in": "query",
            "name": "where.stage.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "closed",
                "merged",
                "opened"
              ]
            },
            "in": "query",
            "name": "where.stage.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "closed",
                "merged",
                "opened"
              ]
            },
            "in": "query",
            "name": "where.stage.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "closed",
                "merged",
                "opened"
              ]
            },
            "in": "query",
            "name": "where.stage.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "closed",
                "merged",
                "opened"
              ]
            },
            "in": "query",
            "name": "where.stage.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "closed",
                "merged",
                "opened"
              ]
            },
            "in": "query",
            "name": "where.stage.like",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "closed",
                "merged",
                "opened"
              ]
            },
            "in": "query",
            "name": "where.stage.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.stage.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.stage.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.stage.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.stage.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.stage.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "started",
                "stopped"
              ]
            },
            "in": "query",
            "name": "where.status.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "started",
                "stopped"
              ]
            },
            "in": "query",
            "name": "where.status.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "started",
                "stopped"
              ]
            },
            "in": "query",
            "name": "where.status.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "started",
                "stopped"
              ]
            },
            "in": "query",
            "name": "where.status.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "started",
                "stopped"
              ]
            },
            "in": "query",
            "name": "where.status.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "started",
                "stopped"
              ]
            },
            "in": "query",
            "name": "where.status.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "started",
                "stopped"
              ]
            },
            "in": "query",
            "name": "where.status.like",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "started",
                "stopped"
              ]
            },
            "in": "query",
            "name": "where.status.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.closedAt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.createdAt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.id",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.main",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.name",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.stage",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.status",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Taxonomy"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createTaxonomy",
        "summary": "Create taxonomy.",
        "tags": [
          "taxonomies"
        ],
        "description": "Add new taxonomy to the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxonomyInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A Taxonomy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Taxonomy"
                }
              }
            },
            "links": {
              "GetTaxonomiesApplicationsChanges": {
                "operationId": "getTaxonomiesApplicationsChanges",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetEntrypoints": {
                "operationId": "getEntrypoints",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetGraphs": {
                "operationId": "getGraphs",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetGenerations": {
                "operationId": "getGenerations",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetEnvironments": {
                "operationId": "getEnvironments",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetNetworkSettings": {
                "operationId": "getNetworkSettings",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateTaxonomies",
        "summary": "Update taxonomies.",
        "tags": [
          "taxonomies"
        ],
        "description": "Update one or more taxonomies in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxonomyInput"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "closedAt",
                  "createdAt",
                  "id",
                  "main",
                  "name",
                  "stage",
                  "status"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.closedAt.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.closedAt.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.closedAt.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.closedAt.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.closedAt.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.closedAt.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.closedAt.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.closedAt.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.closedAt.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.closedAt.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.closedAt.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.closedAt.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.closedAt.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.main.eq",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.main.neq",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.main.gt",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.main.gte",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.main.lt",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.main.lte",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.main.like",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.main.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.main.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.main.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.main.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.main.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.main.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "closed",
                "merged",
                "opened"
              ]
            },
            "in": "query",
            "name": "where.stage.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "closed",
                "merged",
                "opened"
              ]
            },
            "in": "query",
            "name": "where.stage.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "closed",
                "merged",
                "opened"
              ]
            },
            "in": "query",
            "name": "where.stage.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "closed",
                "merged",
                "opened"
              ]
            },
            "in": "query",
            "name": "where.stage.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "closed",
                "merged",
                "opened"
              ]
            },
            "in": "query",
            "name": "where.stage.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "closed",
                "merged",
                "opened"
              ]
            },
            "in": "query",
            "name": "where.stage.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "closed",
                "merged",
                "opened"
              ]
            },
            "in": "query",
            "name": "where.stage.like",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "closed",
                "merged",
                "opened"
              ]
            },
            "in": "query",
            "name": "where.stage.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.stage.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.stage.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.stage.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.stage.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.stage.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "started",
                "stopped"
              ]
            },
            "in": "query",
            "name": "where.status.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "started",
                "stopped"
              ]
            },
            "in": "query",
            "name": "where.status.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "started",
                "stopped"
              ]
            },
            "in": "query",
            "name": "where.status.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "started",
                "stopped"
              ]
            },
            "in": "query",
            "name": "where.status.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "started",
                "stopped"
              ]
            },
            "in": "query",
            "name": "where.status.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "started",
                "stopped"
              ]
            },
            "in": "query",
            "name": "where.status.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "started",
                "stopped"
              ]
            },
            "in": "query",
            "name": "where.status.like",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "started",
                "stopped"
              ]
            },
            "in": "query",
            "name": "where.status.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Taxonomy"
                  }
                }
              }
            },
            "links": {
              "GetTaxonomiesApplicationsChanges": {
                "operationId": "getTaxonomiesApplicationsChanges",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetEntrypoints": {
                "operationId": "getEntrypoints",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetGraphs": {
                "operationId": "getGraphs",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetGenerations": {
                "operationId": "getGenerations",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetEnvironments": {
                "operationId": "getEnvironments",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetNetworkSettings": {
                "operationId": "getNetworkSettings",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      }
    },
    "/taxonomies/{id}": {
      "get": {
        "operationId": "getTaxonomyById",
        "summary": "Get Taxonomy by id.",
        "tags": [
          "taxonomies"
        ],
        "description": "Fetch Taxonomy using its id from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "closedAt",
                  "createdAt",
                  "id",
                  "main",
                  "name",
                  "stage",
                  "status"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Taxonomy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Taxonomy"
                }
              }
            },
            "links": {
              "GetTaxonomiesApplicationsChanges": {
                "operationId": "getTaxonomiesApplicationsChanges",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetEntrypoints": {
                "operationId": "getEntrypoints",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetGraphs": {
                "operationId": "getGraphs",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetGenerations": {
                "operationId": "getGenerations",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetEnvironments": {
                "operationId": "getEnvironments",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetNetworkSettings": {
                "operationId": "getNetworkSettings",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateTaxonomy",
        "summary": "Update taxonomy.",
        "tags": [
          "taxonomies"
        ],
        "description": "Update taxonomy in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxonomyInput"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "closedAt",
                  "createdAt",
                  "id",
                  "main",
                  "name",
                  "stage",
                  "status"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Taxonomy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Taxonomy"
                }
              }
            },
            "links": {
              "GetTaxonomiesApplicationsChanges": {
                "operationId": "getTaxonomiesApplicationsChanges",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetEntrypoints": {
                "operationId": "getEntrypoints",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetGraphs": {
                "operationId": "getGraphs",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetGenerations": {
                "operationId": "getGenerations",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetEnvironments": {
                "operationId": "getEnvironments",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetNetworkSettings": {
                "operationId": "getNetworkSettings",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteTaxonomies",
        "summary": "Delete taxonomies.",
        "tags": [
          "taxonomies"
        ],
        "description": "Delete one or more taxonomies from the Database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "closedAt",
                  "createdAt",
                  "id",
                  "main",
                  "name",
                  "stage",
                  "status"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Taxonomy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Taxonomy"
                }
              }
            }
          }
        }
      }
    },
    "/taxonomies/{id}/taxonomiesApplicationsChangeTaxonomyId": {
      "get": {
        "operationId": "getTaxonomiesApplicationsChangesForTaxonomy",
        "summary": "Get taxonomiesApplicationsChanges for taxonomy.",
        "tags": [
          "taxonomies"
        ],
        "description": "Fetch all the taxonomiesApplicationsChanges for taxonomy from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "createdAt",
                  "id",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaxonomiesApplicationsChange"
                  }
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              }
            }
          }
        }
      }
    },
    "/taxonomies/{id}/entrypointTaxonomyId": {
      "get": {
        "operationId": "getEntrypointsForTaxonomy",
        "summary": "Get entrypoints for taxonomy.",
        "tags": [
          "taxonomies"
        ],
        "description": "Fetch all the entrypoints for taxonomy from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "createdAt",
                  "id",
                  "path",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Entrypoint"
                  }
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              }
            }
          }
        }
      }
    },
    "/taxonomies/{id}/deploymentTaxonomyId": {
      "get": {
        "operationId": "getDeploymentsForTaxonomy",
        "summary": "Get deployments for taxonomy.",
        "tags": [
          "taxonomies"
        ],
        "description": "Fetch all the deployments for taxonomy from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "applicationStateId",
                  "bundleId",
                  "createdAt",
                  "deploymentSettingsId",
                  "generationId",
                  "id",
                  "machineId",
                  "status",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Deployment"
                  }
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetGenerationById": {
                "operationId": "getGenerationById",
                "parameters": {
                  "id": "$response.body#/generationId"
                }
              },
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              },
              "GetApplicationStateById": {
                "operationId": "getApplicationStateById",
                "parameters": {
                  "id": "$response.body#/applicationStateId"
                }
              },
              "GetDeploymentSettingById": {
                "operationId": "getDeploymentSettingById",
                "parameters": {
                  "id": "$response.body#/deploymentSettingsId"
                }
              }
            }
          }
        }
      }
    },
    "/taxonomies/{id}/graphTaxonomyId": {
      "get": {
        "operationId": "getGraphsForTaxonomy",
        "summary": "Get graphs for taxonomy.",
        "tags": [
          "taxonomies"
        ],
        "description": "Fetch all the graphs for taxonomy from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "generationId",
                  "graph",
                  "id",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Graph"
                  }
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetGenerationById": {
                "operationId": "getGenerationById",
                "parameters": {
                  "id": "$response.body#/generationId"
                }
              }
            }
          }
        }
      }
    },
    "/taxonomies/{id}/generations": {
      "get": {
        "operationId": "getGenerationsForTaxonomy",
        "summary": "Get generations for taxonomy.",
        "tags": [
          "taxonomies"
        ],
        "description": "Fetch all the generations for taxonomy from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "id",
                  "mainIteration",
                  "status",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Generation"
                  }
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.generationId.eq": "$response.body#/id"
                }
              },
              "GetGraphs": {
                "operationId": "getGraphs",
                "parameters": {
                  "where.generationId.eq": "$response.body#/id"
                }
              },
              "GetNetworkSettings": {
                "operationId": "getNetworkSettings",
                "parameters": {
                  "where.generationId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      }
    },
    "/taxonomies/{id}/environmentTaxonomyId": {
      "get": {
        "operationId": "getEnvironmentsForTaxonomy",
        "summary": "Get environments for taxonomy.",
        "tags": [
          "taxonomies"
        ],
        "description": "Fetch all the environments for taxonomy from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "createdAt",
                  "deleted",
                  "deletedAt",
                  "id",
                  "secretsKey",
                  "secretsStorageProvider",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Environment"
                  }
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              }
            }
          }
        }
      }
    },
    "/taxonomies/{id}/networkSettingTaxonomyId": {
      "get": {
        "operationId": "getNetworkSettingsForTaxonomy",
        "summary": "Get networkSettings for taxonomy.",
        "tags": [
          "taxonomies"
        ],
        "description": "Fetch all the networkSettings for taxonomy from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "generationId",
                  "id",
                  "settings",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NetworkSetting"
                  }
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetGenerationById": {
                "operationId": "getGenerationById",
                "parameters": {
                  "id": "$response.body#/generationId"
                }
              }
            }
          }
        }
      }
    },
    "/taxonomiesApplicationsChanges/": {
      "get": {
        "operationId": "getTaxonomiesApplicationsChanges",
        "summary": "Get taxonomiesApplicationsChanges.",
        "tags": [
          "taxonomies_applications_changes"
        ],
        "description": "Fetch taxonomiesApplicationsChanges from the database.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Limit will be applied by default if not passed. If the provided value exceeds the maximum allowed value a validation error will be thrown"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "totalCount",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "createdAt",
                  "id",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.applicationId",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.createdAt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.id",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.taxonomyId",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaxonomiesApplicationsChange"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createTaxonomiesApplicationsChange",
        "summary": "Create taxonomiesApplicationsChange.",
        "tags": [
          "taxonomies_applications_changes"
        ],
        "description": "Add new taxonomiesApplicationsChange to the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxonomiesApplicationsChangeInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A TaxonomiesApplicationsChange",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxonomiesApplicationsChange"
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateTaxonomiesApplicationsChanges",
        "summary": "Update taxonomiesApplicationsChanges.",
        "tags": [
          "taxonomies_applications_changes"
        ],
        "description": "Update one or more taxonomiesApplicationsChanges in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxonomiesApplicationsChangeInput"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "createdAt",
                  "id",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaxonomiesApplicationsChange"
                  }
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              }
            }
          }
        }
      }
    },
    "/taxonomiesApplicationsChanges/{id}": {
      "get": {
        "operationId": "getTaxonomiesApplicationsChangeById",
        "summary": "Get TaxonomiesApplicationsChange by id.",
        "tags": [
          "taxonomies_applications_changes"
        ],
        "description": "Fetch TaxonomiesApplicationsChange using its id from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "createdAt",
                  "id",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A TaxonomiesApplicationsChange",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxonomiesApplicationsChange"
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateTaxonomiesApplicationsChange",
        "summary": "Update taxonomiesApplicationsChange.",
        "tags": [
          "taxonomies_applications_changes"
        ],
        "description": "Update taxonomiesApplicationsChange in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxonomiesApplicationsChangeInput"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "createdAt",
                  "id",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A TaxonomiesApplicationsChange",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxonomiesApplicationsChange"
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteTaxonomiesApplicationsChanges",
        "summary": "Delete taxonomiesApplicationsChanges.",
        "tags": [
          "taxonomies_applications_changes"
        ],
        "description": "Delete one or more taxonomiesApplicationsChanges from the Database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "createdAt",
                  "id",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A TaxonomiesApplicationsChange",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxonomiesApplicationsChange"
                }
              }
            }
          }
        }
      }
    },
    "/taxonomiesApplicationsChanges/{id}/taxonomy": {
      "get": {
        "operationId": "getTaxonomyForTaxonomiesApplicationsChange",
        "summary": "Get taxonomy for taxonomiesApplicationsChange.",
        "tags": [
          "taxonomies_applications_changes"
        ],
        "description": "Fetch the taxonomy for taxonomiesApplicationsChange from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "closedAt",
                  "createdAt",
                  "id",
                  "main",
                  "name",
                  "stage",
                  "status"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Taxonomy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Taxonomy"
                }
              }
            },
            "links": {
              "GetTaxonomiesApplicationsChanges": {
                "operationId": "getTaxonomiesApplicationsChanges",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetEntrypoints": {
                "operationId": "getEntrypoints",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetGraphs": {
                "operationId": "getGraphs",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetGenerations": {
                "operationId": "getGenerations",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetEnvironments": {
                "operationId": "getEnvironments",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetNetworkSettings": {
                "operationId": "getNetworkSettings",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      }
    },
    "/taxonomiesApplicationsChanges/{id}/application": {
      "get": {
        "operationId": "getApplicationForTaxonomiesApplicationsChange",
        "summary": "Get application for taxonomiesApplicationsChange.",
        "tags": [
          "taxonomies_applications_changes"
        ],
        "description": "Fetch the application for taxonomiesApplicationsChange from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "deleted",
                  "deletedAt",
                  "deletedBy",
                  "id",
                  "name"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Application",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            },
            "links": {
              "GetTaxonomiesApplicationsChanges": {
                "operationId": "getTaxonomiesApplicationsChanges",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetEntrypoints": {
                "operationId": "getEntrypoints",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetApplicationStates": {
                "operationId": "getApplicationStates",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetEnvironments": {
                "operationId": "getEnvironments",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetDeploymentSettings": {
                "operationId": "getDeploymentSettings",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetApplicationSettings": {
                "operationId": "getApplicationSettings",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      }
    },
    "/entrypoints/": {
      "get": {
        "operationId": "getEntrypoints",
        "summary": "Get entrypoints.",
        "tags": [
          "entrypoints"
        ],
        "description": "Fetch entrypoints from the database.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Limit will be applied by default if not passed. If the provided value exceeds the maximum allowed value a validation error will be thrown"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "totalCount",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "createdAt",
                  "id",
                  "path",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.applicationId",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.createdAt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.id",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.path",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.taxonomyId",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Entrypoint"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createEntrypoint",
        "summary": "Create entrypoint.",
        "tags": [
          "entrypoints"
        ],
        "description": "Add new entrypoint to the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntrypointInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A Entrypoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Entrypoint"
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateEntrypoints",
        "summary": "Update entrypoints.",
        "tags": [
          "entrypoints"
        ],
        "description": "Update one or more entrypoints in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntrypointInput"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "createdAt",
                  "id",
                  "path",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.path.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Entrypoint"
                  }
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              }
            }
          }
        }
      }
    },
    "/entrypoints/{id}": {
      "get": {
        "operationId": "getEntrypointById",
        "summary": "Get Entrypoint by id.",
        "tags": [
          "entrypoints"
        ],
        "description": "Fetch Entrypoint using its id from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "createdAt",
                  "id",
                  "path",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Entrypoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Entrypoint"
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateEntrypoint",
        "summary": "Update entrypoint.",
        "tags": [
          "entrypoints"
        ],
        "description": "Update entrypoint in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntrypointInput"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "createdAt",
                  "id",
                  "path",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Entrypoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Entrypoint"
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteEntrypoints",
        "summary": "Delete entrypoints.",
        "tags": [
          "entrypoints"
        ],
        "description": "Delete one or more entrypoints from the Database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "createdAt",
                  "id",
                  "path",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Entrypoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Entrypoint"
                }
              }
            }
          }
        }
      }
    },
    "/entrypoints/{id}/taxonomy": {
      "get": {
        "operationId": "getTaxonomyForEntrypoint",
        "summary": "Get taxonomy for entrypoint.",
        "tags": [
          "entrypoints"
        ],
        "description": "Fetch the taxonomy for entrypoint from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "closedAt",
                  "createdAt",
                  "id",
                  "main",
                  "name",
                  "stage",
                  "status"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Taxonomy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Taxonomy"
                }
              }
            },
            "links": {
              "GetTaxonomiesApplicationsChanges": {
                "operationId": "getTaxonomiesApplicationsChanges",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetEntrypoints": {
                "operationId": "getEntrypoints",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetGraphs": {
                "operationId": "getGraphs",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetGenerations": {
                "operationId": "getGenerations",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetEnvironments": {
                "operationId": "getEnvironments",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetNetworkSettings": {
                "operationId": "getNetworkSettings",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      }
    },
    "/entrypoints/{id}/application": {
      "get": {
        "operationId": "getApplicationForEntrypoint",
        "summary": "Get application for entrypoint.",
        "tags": [
          "entrypoints"
        ],
        "description": "Fetch the application for entrypoint from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "deleted",
                  "deletedAt",
                  "deletedBy",
                  "id",
                  "name"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Application",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            },
            "links": {
              "GetTaxonomiesApplicationsChanges": {
                "operationId": "getTaxonomiesApplicationsChanges",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetEntrypoints": {
                "operationId": "getEntrypoints",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetApplicationStates": {
                "operationId": "getApplicationStates",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetEnvironments": {
                "operationId": "getEnvironments",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetDeploymentSettings": {
                "operationId": "getDeploymentSettings",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetApplicationSettings": {
                "operationId": "getApplicationSettings",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      }
    },
    "/applicationStates/": {
      "get": {
        "operationId": "getApplicationStates",
        "summary": "Get applicationStates.",
        "tags": [
          "application_states"
        ],
        "description": "Fetch applicationStates from the database.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Limit will be applied by default if not passed. If the provided value exceeds the maximum allowed value a validation error will be thrown"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "totalCount",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "createdAt",
                  "id",
                  "pltVersion",
                  "state"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.pltVersion.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.pltVersion.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.pltVersion.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.pltVersion.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.pltVersion.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.pltVersion.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.pltVersion.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.pltVersion.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.pltVersion.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.pltVersion.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.pltVersion.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.pltVersion.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.pltVersion.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.applicationId",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.createdAt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.id",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.pltVersion",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.state",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationState"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createApplicationState",
        "summary": "Create applicationState.",
        "tags": [
          "application_states"
        ],
        "description": "Add new applicationState to the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationStateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A ApplicationState",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationState"
                }
              }
            },
            "links": {
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.applicationStateId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateApplicationStates",
        "summary": "Update applicationStates.",
        "tags": [
          "application_states"
        ],
        "description": "Update one or more applicationStates in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationStateInput"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "createdAt",
                  "id",
                  "pltVersion",
                  "state"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.pltVersion.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.pltVersion.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.pltVersion.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.pltVersion.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.pltVersion.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.pltVersion.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.pltVersion.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.pltVersion.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.pltVersion.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.pltVersion.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.pltVersion.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.pltVersion.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.pltVersion.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.state.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationState"
                  }
                }
              }
            },
            "links": {
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.applicationStateId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      }
    },
    "/applicationStates/{id}": {
      "get": {
        "operationId": "getApplicationStateById",
        "summary": "Get ApplicationState by id.",
        "tags": [
          "application_states"
        ],
        "description": "Fetch ApplicationState using its id from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "createdAt",
                  "id",
                  "pltVersion",
                  "state"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A ApplicationState",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationState"
                }
              }
            },
            "links": {
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.applicationStateId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateApplicationState",
        "summary": "Update applicationState.",
        "tags": [
          "application_states"
        ],
        "description": "Update applicationState in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationStateInput"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "createdAt",
                  "id",
                  "pltVersion",
                  "state"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A ApplicationState",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationState"
                }
              }
            },
            "links": {
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.applicationStateId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteApplicationStates",
        "summary": "Delete applicationStates.",
        "tags": [
          "application_states"
        ],
        "description": "Delete one or more applicationStates from the Database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "createdAt",
                  "id",
                  "pltVersion",
                  "state"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A ApplicationState",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationState"
                }
              }
            }
          }
        }
      }
    },
    "/applicationStates/{id}/deploymentApplicationStateId": {
      "get": {
        "operationId": "getDeploymentsForApplicationState",
        "summary": "Get deployments for applicationState.",
        "tags": [
          "application_states"
        ],
        "description": "Fetch all the deployments for applicationState from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "applicationStateId",
                  "bundleId",
                  "createdAt",
                  "deploymentSettingsId",
                  "generationId",
                  "id",
                  "machineId",
                  "status",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Deployment"
                  }
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetGenerationById": {
                "operationId": "getGenerationById",
                "parameters": {
                  "id": "$response.body#/generationId"
                }
              },
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              },
              "GetApplicationStateById": {
                "operationId": "getApplicationStateById",
                "parameters": {
                  "id": "$response.body#/applicationStateId"
                }
              },
              "GetDeploymentSettingById": {
                "operationId": "getDeploymentSettingById",
                "parameters": {
                  "id": "$response.body#/deploymentSettingsId"
                }
              }
            }
          }
        }
      }
    },
    "/applicationStates/{id}/application": {
      "get": {
        "operationId": "getApplicationForApplicationState",
        "summary": "Get application for applicationState.",
        "tags": [
          "application_states"
        ],
        "description": "Fetch the application for applicationState from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "deleted",
                  "deletedAt",
                  "deletedBy",
                  "id",
                  "name"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Application",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            },
            "links": {
              "GetTaxonomiesApplicationsChanges": {
                "operationId": "getTaxonomiesApplicationsChanges",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetEntrypoints": {
                "operationId": "getEntrypoints",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetApplicationStates": {
                "operationId": "getApplicationStates",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetEnvironments": {
                "operationId": "getEnvironments",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetDeploymentSettings": {
                "operationId": "getDeploymentSettings",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetApplicationSettings": {
                "operationId": "getApplicationSettings",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      }
    },
    "/deployments/": {
      "get": {
        "operationId": "getDeployments",
        "summary": "Get deployments.",
        "tags": [
          "deployments"
        ],
        "description": "Fetch deployments from the database.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Limit will be applied by default if not passed. If the provided value exceeds the maximum allowed value a validation error will be thrown"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "totalCount",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "applicationStateId",
                  "bundleId",
                  "createdAt",
                  "deploymentSettingsId",
                  "generationId",
                  "id",
                  "machineId",
                  "status",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationStateId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationStateId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationStateId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationStateId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationStateId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationStateId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationStateId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationStateId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationStateId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationStateId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationStateId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationStateId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationStateId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bundleId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bundleId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bundleId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bundleId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bundleId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bundleId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bundleId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bundleId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bundleId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bundleId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bundleId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bundleId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bundleId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deploymentSettingsId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deploymentSettingsId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deploymentSettingsId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deploymentSettingsId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deploymentSettingsId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deploymentSettingsId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deploymentSettingsId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deploymentSettingsId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deploymentSettingsId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deploymentSettingsId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deploymentSettingsId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deploymentSettingsId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deploymentSettingsId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.machineId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.machineId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.machineId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.machineId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.machineId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.machineId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.machineId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.machineId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.machineId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.machineId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.machineId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.machineId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.machineId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "failed",
                "started",
                "starting"
              ]
            },
            "in": "query",
            "name": "where.status.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "failed",
                "started",
                "starting"
              ]
            },
            "in": "query",
            "name": "where.status.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "failed",
                "started",
                "starting"
              ]
            },
            "in": "query",
            "name": "where.status.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "failed",
                "started",
                "starting"
              ]
            },
            "in": "query",
            "name": "where.status.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "failed",
                "started",
                "starting"
              ]
            },
            "in": "query",
            "name": "where.status.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "failed",
                "started",
                "starting"
              ]
            },
            "in": "query",
            "name": "where.status.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "failed",
                "started",
                "starting"
              ]
            },
            "in": "query",
            "name": "where.status.like",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "failed",
                "started",
                "starting"
              ]
            },
            "in": "query",
            "name": "where.status.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.applicationId",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.applicationStateId",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.bundleId",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.createdAt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.deploymentSettingsId",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.generationId",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.id",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.machineId",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.status",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.taxonomyId",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Deployment"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createDeployment",
        "summary": "Create deployment.",
        "tags": [
          "deployments"
        ],
        "description": "Add new deployment to the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeploymentInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A Deployment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Deployment"
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetGenerationById": {
                "operationId": "getGenerationById",
                "parameters": {
                  "id": "$response.body#/generationId"
                }
              },
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              },
              "GetApplicationStateById": {
                "operationId": "getApplicationStateById",
                "parameters": {
                  "id": "$response.body#/applicationStateId"
                }
              },
              "GetDeploymentSettingById": {
                "operationId": "getDeploymentSettingById",
                "parameters": {
                  "id": "$response.body#/deploymentSettingsId"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateDeployments",
        "summary": "Update deployments.",
        "tags": [
          "deployments"
        ],
        "description": "Update one or more deployments in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeploymentInput"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "applicationStateId",
                  "bundleId",
                  "createdAt",
                  "deploymentSettingsId",
                  "generationId",
                  "id",
                  "machineId",
                  "status",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationStateId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationStateId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationStateId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationStateId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationStateId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationStateId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationStateId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationStateId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationStateId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationStateId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationStateId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationStateId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationStateId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bundleId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bundleId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bundleId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bundleId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bundleId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bundleId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bundleId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bundleId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bundleId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bundleId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bundleId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bundleId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.bundleId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deploymentSettingsId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deploymentSettingsId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deploymentSettingsId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deploymentSettingsId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deploymentSettingsId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deploymentSettingsId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deploymentSettingsId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deploymentSettingsId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deploymentSettingsId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deploymentSettingsId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deploymentSettingsId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deploymentSettingsId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deploymentSettingsId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.machineId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.machineId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.machineId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.machineId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.machineId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.machineId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.machineId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.machineId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.machineId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.machineId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.machineId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.machineId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.machineId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "failed",
                "started",
                "starting"
              ]
            },
            "in": "query",
            "name": "where.status.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "failed",
                "started",
                "starting"
              ]
            },
            "in": "query",
            "name": "where.status.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "failed",
                "started",
                "starting"
              ]
            },
            "in": "query",
            "name": "where.status.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "failed",
                "started",
                "starting"
              ]
            },
            "in": "query",
            "name": "where.status.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "failed",
                "started",
                "starting"
              ]
            },
            "in": "query",
            "name": "where.status.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "failed",
                "started",
                "starting"
              ]
            },
            "in": "query",
            "name": "where.status.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "failed",
                "started",
                "starting"
              ]
            },
            "in": "query",
            "name": "where.status.like",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "failed",
                "started",
                "starting"
              ]
            },
            "in": "query",
            "name": "where.status.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Deployment"
                  }
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetGenerationById": {
                "operationId": "getGenerationById",
                "parameters": {
                  "id": "$response.body#/generationId"
                }
              },
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              },
              "GetApplicationStateById": {
                "operationId": "getApplicationStateById",
                "parameters": {
                  "id": "$response.body#/applicationStateId"
                }
              },
              "GetDeploymentSettingById": {
                "operationId": "getDeploymentSettingById",
                "parameters": {
                  "id": "$response.body#/deploymentSettingsId"
                }
              }
            }
          }
        }
      }
    },
    "/deployments/{id}": {
      "get": {
        "operationId": "getDeploymentById",
        "summary": "Get Deployment by id.",
        "tags": [
          "deployments"
        ],
        "description": "Fetch Deployment using its id from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "applicationStateId",
                  "bundleId",
                  "createdAt",
                  "deploymentSettingsId",
                  "generationId",
                  "id",
                  "machineId",
                  "status",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Deployment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Deployment"
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetGenerationById": {
                "operationId": "getGenerationById",
                "parameters": {
                  "id": "$response.body#/generationId"
                }
              },
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              },
              "GetApplicationStateById": {
                "operationId": "getApplicationStateById",
                "parameters": {
                  "id": "$response.body#/applicationStateId"
                }
              },
              "GetDeploymentSettingById": {
                "operationId": "getDeploymentSettingById",
                "parameters": {
                  "id": "$response.body#/deploymentSettingsId"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateDeployment",
        "summary": "Update deployment.",
        "tags": [
          "deployments"
        ],
        "description": "Update deployment in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeploymentInput"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "applicationStateId",
                  "bundleId",
                  "createdAt",
                  "deploymentSettingsId",
                  "generationId",
                  "id",
                  "machineId",
                  "status",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Deployment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Deployment"
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetGenerationById": {
                "operationId": "getGenerationById",
                "parameters": {
                  "id": "$response.body#/generationId"
                }
              },
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              },
              "GetApplicationStateById": {
                "operationId": "getApplicationStateById",
                "parameters": {
                  "id": "$response.body#/applicationStateId"
                }
              },
              "GetDeploymentSettingById": {
                "operationId": "getDeploymentSettingById",
                "parameters": {
                  "id": "$response.body#/deploymentSettingsId"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteDeployments",
        "summary": "Delete deployments.",
        "tags": [
          "deployments"
        ],
        "description": "Delete one or more deployments from the Database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "applicationStateId",
                  "bundleId",
                  "createdAt",
                  "deploymentSettingsId",
                  "generationId",
                  "id",
                  "machineId",
                  "status",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Deployment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Deployment"
                }
              }
            }
          }
        }
      }
    },
    "/deployments/{id}/taxonomy": {
      "get": {
        "operationId": "getTaxonomyForDeployment",
        "summary": "Get taxonomy for deployment.",
        "tags": [
          "deployments"
        ],
        "description": "Fetch the taxonomy for deployment from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "closedAt",
                  "createdAt",
                  "id",
                  "main",
                  "name",
                  "stage",
                  "status"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Taxonomy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Taxonomy"
                }
              }
            },
            "links": {
              "GetTaxonomiesApplicationsChanges": {
                "operationId": "getTaxonomiesApplicationsChanges",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetEntrypoints": {
                "operationId": "getEntrypoints",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetGraphs": {
                "operationId": "getGraphs",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetGenerations": {
                "operationId": "getGenerations",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetEnvironments": {
                "operationId": "getEnvironments",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetNetworkSettings": {
                "operationId": "getNetworkSettings",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      }
    },
    "/deployments/{id}/generation": {
      "get": {
        "operationId": "getGenerationForDeployment",
        "summary": "Get generation for deployment.",
        "tags": [
          "deployments"
        ],
        "description": "Fetch the generation for deployment from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "id",
                  "mainIteration",
                  "status",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Generation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Generation"
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.generationId.eq": "$response.body#/id"
                }
              },
              "GetGraphs": {
                "operationId": "getGraphs",
                "parameters": {
                  "where.generationId.eq": "$response.body#/id"
                }
              },
              "GetNetworkSettings": {
                "operationId": "getNetworkSettings",
                "parameters": {
                  "where.generationId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      }
    },
    "/deployments/{id}/application": {
      "get": {
        "operationId": "getApplicationForDeployment",
        "summary": "Get application for deployment.",
        "tags": [
          "deployments"
        ],
        "description": "Fetch the application for deployment from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "deleted",
                  "deletedAt",
                  "deletedBy",
                  "id",
                  "name"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Application",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            },
            "links": {
              "GetTaxonomiesApplicationsChanges": {
                "operationId": "getTaxonomiesApplicationsChanges",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetEntrypoints": {
                "operationId": "getEntrypoints",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetApplicationStates": {
                "operationId": "getApplicationStates",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetEnvironments": {
                "operationId": "getEnvironments",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetDeploymentSettings": {
                "operationId": "getDeploymentSettings",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetApplicationSettings": {
                "operationId": "getApplicationSettings",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      }
    },
    "/deployments/{id}/application_state": {
      "get": {
        "operationId": "getApplicationStateForDeployment",
        "summary": "Get applicationState for deployment.",
        "tags": [
          "deployments"
        ],
        "description": "Fetch the applicationState for deployment from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "createdAt",
                  "id",
                  "pltVersion",
                  "state"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A ApplicationState",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationState"
                }
              }
            },
            "links": {
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.applicationStateId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      }
    },
    "/deployments/{id}/deployment_settings": {
      "get": {
        "operationId": "getDeploymentSettingForDeployment",
        "summary": "Get deploymentSetting for deployment.",
        "tags": [
          "deployments"
        ],
        "description": "Fetch the deploymentSetting for deployment from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "cores",
                  "createdAt",
                  "heap",
                  "id",
                  "memory",
                  "services",
                  "threads"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A DeploymentSetting",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentSetting"
                }
              }
            },
            "links": {
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.deploymentSettingsId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      }
    },
    "/graphs/": {
      "get": {
        "operationId": "getGraphs",
        "summary": "Get graphs.",
        "tags": [
          "graphs"
        ],
        "description": "Fetch graphs from the database.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Limit will be applied by default if not passed. If the provided value exceeds the maximum allowed value a validation error will be thrown"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "totalCount",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "generationId",
                  "graph",
                  "id",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.graph.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.graph.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.graph.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.graph.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.graph.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.graph.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.graph.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.graph.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.graph.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.graph.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.graph.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.graph.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.graph.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.createdAt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.generationId",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.graph",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.id",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.taxonomyId",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Graph"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createGraph",
        "summary": "Create graph.",
        "tags": [
          "graphs"
        ],
        "description": "Add new graph to the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A Graph",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Graph"
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetGenerationById": {
                "operationId": "getGenerationById",
                "parameters": {
                  "id": "$response.body#/generationId"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateGraphs",
        "summary": "Update graphs.",
        "tags": [
          "graphs"
        ],
        "description": "Update one or more graphs in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphInput"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "generationId",
                  "graph",
                  "id",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.graph.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.graph.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.graph.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.graph.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.graph.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.graph.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.graph.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.graph.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.graph.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.graph.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.graph.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.graph.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.graph.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Graph"
                  }
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetGenerationById": {
                "operationId": "getGenerationById",
                "parameters": {
                  "id": "$response.body#/generationId"
                }
              }
            }
          }
        }
      }
    },
    "/graphs/{id}": {
      "get": {
        "operationId": "getGraphById",
        "summary": "Get Graph by id.",
        "tags": [
          "graphs"
        ],
        "description": "Fetch Graph using its id from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "generationId",
                  "graph",
                  "id",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Graph",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Graph"
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetGenerationById": {
                "operationId": "getGenerationById",
                "parameters": {
                  "id": "$response.body#/generationId"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateGraph",
        "summary": "Update graph.",
        "tags": [
          "graphs"
        ],
        "description": "Update graph in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphInput"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "generationId",
                  "graph",
                  "id",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Graph",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Graph"
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetGenerationById": {
                "operationId": "getGenerationById",
                "parameters": {
                  "id": "$response.body#/generationId"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteGraphs",
        "summary": "Delete graphs.",
        "tags": [
          "graphs"
        ],
        "description": "Delete one or more graphs from the Database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "generationId",
                  "graph",
                  "id",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Graph",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Graph"
                }
              }
            }
          }
        }
      }
    },
    "/graphs/{id}/taxonomy": {
      "get": {
        "operationId": "getTaxonomyForGraph",
        "summary": "Get taxonomy for graph.",
        "tags": [
          "graphs"
        ],
        "description": "Fetch the taxonomy for graph from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "closedAt",
                  "createdAt",
                  "id",
                  "main",
                  "name",
                  "stage",
                  "status"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Taxonomy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Taxonomy"
                }
              }
            },
            "links": {
              "GetTaxonomiesApplicationsChanges": {
                "operationId": "getTaxonomiesApplicationsChanges",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetEntrypoints": {
                "operationId": "getEntrypoints",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetGraphs": {
                "operationId": "getGraphs",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetGenerations": {
                "operationId": "getGenerations",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetEnvironments": {
                "operationId": "getEnvironments",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetNetworkSettings": {
                "operationId": "getNetworkSettings",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      }
    },
    "/graphs/{id}/generation": {
      "get": {
        "operationId": "getGenerationForGraph",
        "summary": "Get generation for graph.",
        "tags": [
          "graphs"
        ],
        "description": "Fetch the generation for graph from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "id",
                  "mainIteration",
                  "status",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Generation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Generation"
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.generationId.eq": "$response.body#/id"
                }
              },
              "GetGraphs": {
                "operationId": "getGraphs",
                "parameters": {
                  "where.generationId.eq": "$response.body#/id"
                }
              },
              "GetNetworkSettings": {
                "operationId": "getNetworkSettings",
                "parameters": {
                  "where.generationId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      }
    },
    "/generations/": {
      "get": {
        "operationId": "getGenerations",
        "summary": "Get generations.",
        "tags": [
          "generations"
        ],
        "description": "Fetch generations from the database.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Limit will be applied by default if not passed. If the provided value exceeds the maximum allowed value a validation error will be thrown"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "totalCount",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "id",
                  "mainIteration",
                  "status",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.mainIteration.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.mainIteration.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.mainIteration.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.mainIteration.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.mainIteration.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.mainIteration.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.mainIteration.like",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.mainIteration.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.mainIteration.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.mainIteration.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.mainIteration.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.mainIteration.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.mainIteration.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "empty",
                "failed",
                "started",
                "starting"
              ]
            },
            "in": "query",
            "name": "where.status.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "empty",
                "failed",
                "started",
                "starting"
              ]
            },
            "in": "query",
            "name": "where.status.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "empty",
                "failed",
                "started",
                "starting"
              ]
            },
            "in": "query",
            "name": "where.status.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "empty",
                "failed",
                "started",
                "starting"
              ]
            },
            "in": "query",
            "name": "where.status.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "empty",
                "failed",
                "started",
                "starting"
              ]
            },
            "in": "query",
            "name": "where.status.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "empty",
                "failed",
                "started",
                "starting"
              ]
            },
            "in": "query",
            "name": "where.status.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "empty",
                "failed",
                "started",
                "starting"
              ]
            },
            "in": "query",
            "name": "where.status.like",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "empty",
                "failed",
                "started",
                "starting"
              ]
            },
            "in": "query",
            "name": "where.status.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.createdAt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.id",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.mainIteration",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.status",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.taxonomyId",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Generation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createGeneration",
        "summary": "Create generation.",
        "tags": [
          "generations"
        ],
        "description": "Add new generation to the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerationInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A Generation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Generation"
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.generationId.eq": "$response.body#/id"
                }
              },
              "GetGraphs": {
                "operationId": "getGraphs",
                "parameters": {
                  "where.generationId.eq": "$response.body#/id"
                }
              },
              "GetNetworkSettings": {
                "operationId": "getNetworkSettings",
                "parameters": {
                  "where.generationId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateGenerations",
        "summary": "Update generations.",
        "tags": [
          "generations"
        ],
        "description": "Update one or more generations in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerationInput"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "id",
                  "mainIteration",
                  "status",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.mainIteration.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.mainIteration.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.mainIteration.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.mainIteration.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.mainIteration.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.mainIteration.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.mainIteration.like",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.mainIteration.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.mainIteration.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.mainIteration.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.mainIteration.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.mainIteration.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.mainIteration.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "empty",
                "failed",
                "started",
                "starting"
              ]
            },
            "in": "query",
            "name": "where.status.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "empty",
                "failed",
                "started",
                "starting"
              ]
            },
            "in": "query",
            "name": "where.status.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "empty",
                "failed",
                "started",
                "starting"
              ]
            },
            "in": "query",
            "name": "where.status.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "empty",
                "failed",
                "started",
                "starting"
              ]
            },
            "in": "query",
            "name": "where.status.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "empty",
                "failed",
                "started",
                "starting"
              ]
            },
            "in": "query",
            "name": "where.status.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "empty",
                "failed",
                "started",
                "starting"
              ]
            },
            "in": "query",
            "name": "where.status.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "empty",
                "failed",
                "started",
                "starting"
              ]
            },
            "in": "query",
            "name": "where.status.like",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "empty",
                "failed",
                "started",
                "starting"
              ]
            },
            "in": "query",
            "name": "where.status.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.status.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Generation"
                  }
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.generationId.eq": "$response.body#/id"
                }
              },
              "GetGraphs": {
                "operationId": "getGraphs",
                "parameters": {
                  "where.generationId.eq": "$response.body#/id"
                }
              },
              "GetNetworkSettings": {
                "operationId": "getNetworkSettings",
                "parameters": {
                  "where.generationId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      }
    },
    "/generations/{id}": {
      "get": {
        "operationId": "getGenerationById",
        "summary": "Get Generation by id.",
        "tags": [
          "generations"
        ],
        "description": "Fetch Generation using its id from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "id",
                  "mainIteration",
                  "status",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Generation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Generation"
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.generationId.eq": "$response.body#/id"
                }
              },
              "GetGraphs": {
                "operationId": "getGraphs",
                "parameters": {
                  "where.generationId.eq": "$response.body#/id"
                }
              },
              "GetNetworkSettings": {
                "operationId": "getNetworkSettings",
                "parameters": {
                  "where.generationId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateGeneration",
        "summary": "Update generation.",
        "tags": [
          "generations"
        ],
        "description": "Update generation in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerationInput"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "id",
                  "mainIteration",
                  "status",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Generation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Generation"
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.generationId.eq": "$response.body#/id"
                }
              },
              "GetGraphs": {
                "operationId": "getGraphs",
                "parameters": {
                  "where.generationId.eq": "$response.body#/id"
                }
              },
              "GetNetworkSettings": {
                "operationId": "getNetworkSettings",
                "parameters": {
                  "where.generationId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteGenerations",
        "summary": "Delete generations.",
        "tags": [
          "generations"
        ],
        "description": "Delete one or more generations from the Database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "id",
                  "mainIteration",
                  "status",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Generation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Generation"
                }
              }
            }
          }
        }
      }
    },
    "/generations/{id}/deploymentGenerationId": {
      "get": {
        "operationId": "getDeploymentsForGeneration",
        "summary": "Get deployments for generation.",
        "tags": [
          "generations"
        ],
        "description": "Fetch all the deployments for generation from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "applicationStateId",
                  "bundleId",
                  "createdAt",
                  "deploymentSettingsId",
                  "generationId",
                  "id",
                  "machineId",
                  "status",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Deployment"
                  }
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetGenerationById": {
                "operationId": "getGenerationById",
                "parameters": {
                  "id": "$response.body#/generationId"
                }
              },
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              },
              "GetApplicationStateById": {
                "operationId": "getApplicationStateById",
                "parameters": {
                  "id": "$response.body#/applicationStateId"
                }
              },
              "GetDeploymentSettingById": {
                "operationId": "getDeploymentSettingById",
                "parameters": {
                  "id": "$response.body#/deploymentSettingsId"
                }
              }
            }
          }
        }
      }
    },
    "/generations/{id}/graphGenerationId": {
      "get": {
        "operationId": "getGraphsForGeneration",
        "summary": "Get graphs for generation.",
        "tags": [
          "generations"
        ],
        "description": "Fetch all the graphs for generation from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "generationId",
                  "graph",
                  "id",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Graph"
                  }
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetGenerationById": {
                "operationId": "getGenerationById",
                "parameters": {
                  "id": "$response.body#/generationId"
                }
              }
            }
          }
        }
      }
    },
    "/generations/{id}/networkSettingGenerationId": {
      "get": {
        "operationId": "getNetworkSettingsForGeneration",
        "summary": "Get networkSettings for generation.",
        "tags": [
          "generations"
        ],
        "description": "Fetch all the networkSettings for generation from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "generationId",
                  "id",
                  "settings",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NetworkSetting"
                  }
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetGenerationById": {
                "operationId": "getGenerationById",
                "parameters": {
                  "id": "$response.body#/generationId"
                }
              }
            }
          }
        }
      }
    },
    "/generations/{id}/taxonomy": {
      "get": {
        "operationId": "getTaxonomyForGeneration",
        "summary": "Get taxonomy for generation.",
        "tags": [
          "generations"
        ],
        "description": "Fetch the taxonomy for generation from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "closedAt",
                  "createdAt",
                  "id",
                  "main",
                  "name",
                  "stage",
                  "status"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Taxonomy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Taxonomy"
                }
              }
            },
            "links": {
              "GetTaxonomiesApplicationsChanges": {
                "operationId": "getTaxonomiesApplicationsChanges",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetEntrypoints": {
                "operationId": "getEntrypoints",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetGraphs": {
                "operationId": "getGraphs",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetGenerations": {
                "operationId": "getGenerations",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetEnvironments": {
                "operationId": "getEnvironments",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetNetworkSettings": {
                "operationId": "getNetworkSettings",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      }
    },
    "/environments/": {
      "get": {
        "operationId": "getEnvironments",
        "summary": "Get environments.",
        "tags": [
          "environments"
        ],
        "description": "Fetch environments from the database.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Limit will be applied by default if not passed. If the provided value exceeds the maximum allowed value a validation error will be thrown"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "totalCount",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "createdAt",
                  "deleted",
                  "deletedAt",
                  "id",
                  "secretsKey",
                  "secretsStorageProvider",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.deleted.eq",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.deleted.neq",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.deleted.gt",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.deleted.gte",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.deleted.lt",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.deleted.lte",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.deleted.like",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.deleted.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deleted.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deleted.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deleted.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deleted.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deleted.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsKey.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsKey.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsKey.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsKey.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsKey.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsKey.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsKey.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsKey.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsKey.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsKey.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsKey.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsKey.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsKey.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "plaintext",
                "vault"
              ]
            },
            "in": "query",
            "name": "where.secretsStorageProvider.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "plaintext",
                "vault"
              ]
            },
            "in": "query",
            "name": "where.secretsStorageProvider.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "plaintext",
                "vault"
              ]
            },
            "in": "query",
            "name": "where.secretsStorageProvider.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "plaintext",
                "vault"
              ]
            },
            "in": "query",
            "name": "where.secretsStorageProvider.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "plaintext",
                "vault"
              ]
            },
            "in": "query",
            "name": "where.secretsStorageProvider.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "plaintext",
                "vault"
              ]
            },
            "in": "query",
            "name": "where.secretsStorageProvider.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "plaintext",
                "vault"
              ]
            },
            "in": "query",
            "name": "where.secretsStorageProvider.like",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "plaintext",
                "vault"
              ]
            },
            "in": "query",
            "name": "where.secretsStorageProvider.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsStorageProvider.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsStorageProvider.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsStorageProvider.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsStorageProvider.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsStorageProvider.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.applicationId",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.createdAt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.deleted",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.deletedAt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.id",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.secretsKey",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.secretsStorageProvider",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.taxonomyId",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Environment"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createEnvironment",
        "summary": "Create environment.",
        "tags": [
          "environments"
        ],
        "description": "Add new environment to the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A Environment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Environment"
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateEnvironments",
        "summary": "Update environments.",
        "tags": [
          "environments"
        ],
        "description": "Update one or more environments in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentInput"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "createdAt",
                  "deleted",
                  "deletedAt",
                  "id",
                  "secretsKey",
                  "secretsStorageProvider",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.deleted.eq",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.deleted.neq",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.deleted.gt",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.deleted.gte",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.deleted.lt",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.deleted.lte",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.deleted.like",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.deleted.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deleted.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deleted.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deleted.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deleted.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deleted.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsKey.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsKey.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsKey.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsKey.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsKey.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsKey.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsKey.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsKey.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsKey.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsKey.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsKey.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsKey.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsKey.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "plaintext",
                "vault"
              ]
            },
            "in": "query",
            "name": "where.secretsStorageProvider.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "plaintext",
                "vault"
              ]
            },
            "in": "query",
            "name": "where.secretsStorageProvider.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "plaintext",
                "vault"
              ]
            },
            "in": "query",
            "name": "where.secretsStorageProvider.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "plaintext",
                "vault"
              ]
            },
            "in": "query",
            "name": "where.secretsStorageProvider.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "plaintext",
                "vault"
              ]
            },
            "in": "query",
            "name": "where.secretsStorageProvider.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "plaintext",
                "vault"
              ]
            },
            "in": "query",
            "name": "where.secretsStorageProvider.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "plaintext",
                "vault"
              ]
            },
            "in": "query",
            "name": "where.secretsStorageProvider.like",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "plaintext",
                "vault"
              ]
            },
            "in": "query",
            "name": "where.secretsStorageProvider.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsStorageProvider.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsStorageProvider.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsStorageProvider.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsStorageProvider.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.secretsStorageProvider.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Environment"
                  }
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              }
            }
          }
        }
      }
    },
    "/environments/{id}": {
      "get": {
        "operationId": "getEnvironmentById",
        "summary": "Get Environment by id.",
        "tags": [
          "environments"
        ],
        "description": "Fetch Environment using its id from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "createdAt",
                  "deleted",
                  "deletedAt",
                  "id",
                  "secretsKey",
                  "secretsStorageProvider",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Environment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Environment"
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateEnvironment",
        "summary": "Update environment.",
        "tags": [
          "environments"
        ],
        "description": "Update environment in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentInput"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "createdAt",
                  "deleted",
                  "deletedAt",
                  "id",
                  "secretsKey",
                  "secretsStorageProvider",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Environment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Environment"
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteEnvironments",
        "summary": "Delete environments.",
        "tags": [
          "environments"
        ],
        "description": "Delete one or more environments from the Database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "createdAt",
                  "deleted",
                  "deletedAt",
                  "id",
                  "secretsKey",
                  "secretsStorageProvider",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Environment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Environment"
                }
              }
            }
          }
        }
      }
    },
    "/environments/{id}/taxonomy": {
      "get": {
        "operationId": "getTaxonomyForEnvironment",
        "summary": "Get taxonomy for environment.",
        "tags": [
          "environments"
        ],
        "description": "Fetch the taxonomy for environment from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "closedAt",
                  "createdAt",
                  "id",
                  "main",
                  "name",
                  "stage",
                  "status"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Taxonomy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Taxonomy"
                }
              }
            },
            "links": {
              "GetTaxonomiesApplicationsChanges": {
                "operationId": "getTaxonomiesApplicationsChanges",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetEntrypoints": {
                "operationId": "getEntrypoints",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetGraphs": {
                "operationId": "getGraphs",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetGenerations": {
                "operationId": "getGenerations",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetEnvironments": {
                "operationId": "getEnvironments",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetNetworkSettings": {
                "operationId": "getNetworkSettings",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      }
    },
    "/environments/{id}/application": {
      "get": {
        "operationId": "getApplicationForEnvironment",
        "summary": "Get application for environment.",
        "tags": [
          "environments"
        ],
        "description": "Fetch the application for environment from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "deleted",
                  "deletedAt",
                  "deletedBy",
                  "id",
                  "name"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Application",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            },
            "links": {
              "GetTaxonomiesApplicationsChanges": {
                "operationId": "getTaxonomiesApplicationsChanges",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetEntrypoints": {
                "operationId": "getEntrypoints",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetApplicationStates": {
                "operationId": "getApplicationStates",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetEnvironments": {
                "operationId": "getEnvironments",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetDeploymentSettings": {
                "operationId": "getDeploymentSettings",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetApplicationSettings": {
                "operationId": "getApplicationSettings",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      }
    },
    "/deploymentSettings/": {
      "get": {
        "operationId": "getDeploymentSettings",
        "summary": "Get deploymentSettings.",
        "tags": [
          "deployment_settings"
        ],
        "description": "Fetch deploymentSettings from the database.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Limit will be applied by default if not passed. If the provided value exceeds the maximum allowed value a validation error will be thrown"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "totalCount",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "cores",
                  "createdAt",
                  "heap",
                  "id",
                  "memory",
                  "services",
                  "threads"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.cores.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.cores.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.cores.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.cores.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.cores.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.cores.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.cores.like",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.cores.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.cores.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.cores.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.cores.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.cores.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.cores.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.heap.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.heap.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.heap.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.heap.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.heap.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.heap.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.heap.like",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.heap.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.heap.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.heap.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.heap.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.heap.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.heap.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.memory.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.memory.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.memory.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.memory.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.memory.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.memory.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.memory.like",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.memory.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.memory.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.memory.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.memory.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.memory.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.memory.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.threads.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.threads.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.threads.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.threads.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.threads.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.threads.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.threads.like",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.threads.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.threads.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.threads.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.threads.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.threads.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.threads.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.applicationId",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.cores",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.createdAt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.heap",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.id",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.memory",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.services",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.threads",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeploymentSetting"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createDeploymentSetting",
        "summary": "Create deploymentSetting.",
        "tags": [
          "deployment_settings"
        ],
        "description": "Add new deploymentSetting to the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeploymentSettingInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A DeploymentSetting",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentSetting"
                }
              }
            },
            "links": {
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.deploymentSettingsId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateDeploymentSettings",
        "summary": "Update deploymentSettings.",
        "tags": [
          "deployment_settings"
        ],
        "description": "Update one or more deploymentSettings in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeploymentSettingInput"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "cores",
                  "createdAt",
                  "heap",
                  "id",
                  "memory",
                  "services",
                  "threads"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.cores.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.cores.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.cores.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.cores.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.cores.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.cores.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.cores.like",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.cores.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.cores.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.cores.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.cores.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.cores.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.cores.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.heap.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.heap.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.heap.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.heap.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.heap.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.heap.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.heap.like",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.heap.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.heap.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.heap.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.heap.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.heap.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.heap.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.memory.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.memory.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.memory.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.memory.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.memory.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.memory.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.memory.like",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.memory.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.memory.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.memory.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.memory.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.memory.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.memory.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.threads.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.threads.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.threads.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.threads.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.threads.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.threads.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.threads.like",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.threads.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.threads.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.threads.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.threads.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.threads.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.threads.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeploymentSetting"
                  }
                }
              }
            },
            "links": {
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.deploymentSettingsId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      }
    },
    "/deploymentSettings/{id}": {
      "get": {
        "operationId": "getDeploymentSettingById",
        "summary": "Get DeploymentSetting by id.",
        "tags": [
          "deployment_settings"
        ],
        "description": "Fetch DeploymentSetting using its id from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "cores",
                  "createdAt",
                  "heap",
                  "id",
                  "memory",
                  "services",
                  "threads"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A DeploymentSetting",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentSetting"
                }
              }
            },
            "links": {
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.deploymentSettingsId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateDeploymentSetting",
        "summary": "Update deploymentSetting.",
        "tags": [
          "deployment_settings"
        ],
        "description": "Update deploymentSetting in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeploymentSettingInput"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "cores",
                  "createdAt",
                  "heap",
                  "id",
                  "memory",
                  "services",
                  "threads"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A DeploymentSetting",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentSetting"
                }
              }
            },
            "links": {
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.deploymentSettingsId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteDeploymentSettings",
        "summary": "Delete deploymentSettings.",
        "tags": [
          "deployment_settings"
        ],
        "description": "Delete one or more deploymentSettings from the Database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "cores",
                  "createdAt",
                  "heap",
                  "id",
                  "memory",
                  "services",
                  "threads"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A DeploymentSetting",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentSetting"
                }
              }
            }
          }
        }
      }
    },
    "/deploymentSettings/{id}/deploymentDeploymentSettingsId": {
      "get": {
        "operationId": "getDeploymentsForDeploymentSetting",
        "summary": "Get deployments for deploymentSetting.",
        "tags": [
          "deployment_settings"
        ],
        "description": "Fetch all the deployments for deploymentSetting from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "applicationStateId",
                  "bundleId",
                  "createdAt",
                  "deploymentSettingsId",
                  "generationId",
                  "id",
                  "machineId",
                  "status",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Deployment"
                  }
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetGenerationById": {
                "operationId": "getGenerationById",
                "parameters": {
                  "id": "$response.body#/generationId"
                }
              },
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              },
              "GetApplicationStateById": {
                "operationId": "getApplicationStateById",
                "parameters": {
                  "id": "$response.body#/applicationStateId"
                }
              },
              "GetDeploymentSettingById": {
                "operationId": "getDeploymentSettingById",
                "parameters": {
                  "id": "$response.body#/deploymentSettingsId"
                }
              }
            }
          }
        }
      }
    },
    "/deploymentSettings/{id}/application": {
      "get": {
        "operationId": "getApplicationForDeploymentSetting",
        "summary": "Get application for deploymentSetting.",
        "tags": [
          "deployment_settings"
        ],
        "description": "Fetch the application for deploymentSetting from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "deleted",
                  "deletedAt",
                  "deletedBy",
                  "id",
                  "name"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Application",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            },
            "links": {
              "GetTaxonomiesApplicationsChanges": {
                "operationId": "getTaxonomiesApplicationsChanges",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetEntrypoints": {
                "operationId": "getEntrypoints",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetApplicationStates": {
                "operationId": "getApplicationStates",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetEnvironments": {
                "operationId": "getEnvironments",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetDeploymentSettings": {
                "operationId": "getDeploymentSettings",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetApplicationSettings": {
                "operationId": "getApplicationSettings",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      }
    },
    "/applicationSettings/": {
      "get": {
        "operationId": "getApplicationSettings",
        "summary": "Get applicationSettings.",
        "tags": [
          "application_settings"
        ],
        "description": "Fetch applicationSettings from the database.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Limit will be applied by default if not passed. If the provided value exceeds the maximum allowed value a validation error will be thrown"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "totalCount",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "cores",
                  "createdAt",
                  "heap",
                  "id",
                  "memory",
                  "services",
                  "threads"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.cores.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.cores.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.cores.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.cores.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.cores.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.cores.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.cores.like",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.cores.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.cores.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.cores.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.cores.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.cores.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.cores.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.heap.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.heap.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.heap.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.heap.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.heap.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.heap.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.heap.like",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.heap.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.heap.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.heap.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.heap.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.heap.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.heap.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.memory.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.memory.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.memory.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.memory.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.memory.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.memory.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.memory.like",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.memory.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.memory.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.memory.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.memory.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.memory.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.memory.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.threads.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.threads.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.threads.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.threads.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.threads.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.threads.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.threads.like",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.threads.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.threads.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.threads.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.threads.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.threads.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.threads.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.applicationId",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.cores",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.createdAt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.heap",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.id",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.memory",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.services",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.threads",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationSetting"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createApplicationSetting",
        "summary": "Create applicationSetting.",
        "tags": [
          "application_settings"
        ],
        "description": "Add new applicationSetting to the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationSettingInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A ApplicationSetting",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationSetting"
                }
              }
            },
            "links": {
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateApplicationSettings",
        "summary": "Update applicationSettings.",
        "tags": [
          "application_settings"
        ],
        "description": "Update one or more applicationSettings in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationSettingInput"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "cores",
                  "createdAt",
                  "heap",
                  "id",
                  "memory",
                  "services",
                  "threads"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.applicationId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.cores.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.cores.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.cores.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.cores.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.cores.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.cores.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.cores.like",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.cores.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.cores.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.cores.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.cores.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.cores.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.cores.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.heap.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.heap.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.heap.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.heap.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.heap.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.heap.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.heap.like",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.heap.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.heap.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.heap.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.heap.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.heap.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.heap.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.memory.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.memory.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.memory.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.memory.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.memory.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.memory.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.memory.like",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.memory.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.memory.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.memory.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.memory.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.memory.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.memory.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.services.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.threads.eq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.threads.neq",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.threads.gt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.threads.gte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.threads.lt",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.threads.lte",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.threads.like",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "where.threads.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.threads.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.threads.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.threads.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.threads.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.threads.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationSetting"
                  }
                }
              }
            },
            "links": {
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              }
            }
          }
        }
      }
    },
    "/applicationSettings/{id}": {
      "get": {
        "operationId": "getApplicationSettingById",
        "summary": "Get ApplicationSetting by id.",
        "tags": [
          "application_settings"
        ],
        "description": "Fetch ApplicationSetting using its id from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "cores",
                  "createdAt",
                  "heap",
                  "id",
                  "memory",
                  "services",
                  "threads"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A ApplicationSetting",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationSetting"
                }
              }
            },
            "links": {
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateApplicationSetting",
        "summary": "Update applicationSetting.",
        "tags": [
          "application_settings"
        ],
        "description": "Update applicationSetting in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationSettingInput"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "cores",
                  "createdAt",
                  "heap",
                  "id",
                  "memory",
                  "services",
                  "threads"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A ApplicationSetting",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationSetting"
                }
              }
            },
            "links": {
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteApplicationSettings",
        "summary": "Delete applicationSettings.",
        "tags": [
          "application_settings"
        ],
        "description": "Delete one or more applicationSettings from the Database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "cores",
                  "createdAt",
                  "heap",
                  "id",
                  "memory",
                  "services",
                  "threads"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A ApplicationSetting",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationSetting"
                }
              }
            }
          }
        }
      }
    },
    "/applicationSettings/{id}/application": {
      "get": {
        "operationId": "getApplicationForApplicationSetting",
        "summary": "Get application for applicationSetting.",
        "tags": [
          "application_settings"
        ],
        "description": "Fetch the application for applicationSetting from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "deleted",
                  "deletedAt",
                  "deletedBy",
                  "id",
                  "name"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Application",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            },
            "links": {
              "GetTaxonomiesApplicationsChanges": {
                "operationId": "getTaxonomiesApplicationsChanges",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetEntrypoints": {
                "operationId": "getEntrypoints",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetApplicationStates": {
                "operationId": "getApplicationStates",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetEnvironments": {
                "operationId": "getEnvironments",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetDeploymentSettings": {
                "operationId": "getDeploymentSettings",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetApplicationSettings": {
                "operationId": "getApplicationSettings",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      }
    },
    "/applications/": {
      "get": {
        "operationId": "getApplications",
        "summary": "Get applications.",
        "tags": [
          "applications"
        ],
        "description": "Fetch applications from the database.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Limit will be applied by default if not passed. If the provided value exceeds the maximum allowed value a validation error will be thrown"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "totalCount",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "deleted",
                  "deletedAt",
                  "deletedBy",
                  "id",
                  "name"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.deleted.eq",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.deleted.neq",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.deleted.gt",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.deleted.gte",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.deleted.lt",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.deleted.lte",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.deleted.like",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.deleted.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deleted.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deleted.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deleted.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deleted.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deleted.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedBy.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedBy.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedBy.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedBy.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedBy.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedBy.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedBy.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedBy.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedBy.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedBy.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedBy.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedBy.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedBy.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.createdAt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.deleted",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.deletedAt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.deletedBy",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.id",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.name",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Application"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateApplications",
        "summary": "Update applications.",
        "tags": [
          "applications"
        ],
        "description": "Update one or more applications in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationInput"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "deleted",
                  "deletedAt",
                  "deletedBy",
                  "id",
                  "name"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.deleted.eq",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.deleted.neq",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.deleted.gt",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.deleted.gte",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.deleted.lt",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.deleted.lte",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.deleted.like",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "where.deleted.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deleted.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deleted.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deleted.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deleted.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deleted.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedAt.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedBy.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedBy.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedBy.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedBy.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedBy.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedBy.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedBy.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedBy.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedBy.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedBy.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedBy.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedBy.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.deletedBy.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.name.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Application"
                  }
                }
              }
            },
            "links": {
              "GetTaxonomiesApplicationsChanges": {
                "operationId": "getTaxonomiesApplicationsChanges",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetEntrypoints": {
                "operationId": "getEntrypoints",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetApplicationStates": {
                "operationId": "getApplicationStates",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetEnvironments": {
                "operationId": "getEnvironments",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetDeploymentSettings": {
                "operationId": "getDeploymentSettings",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetApplicationSettings": {
                "operationId": "getApplicationSettings",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createApplication",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/applications/{id}": {
      "get": {
        "operationId": "getApplicationById",
        "summary": "Get Application by id.",
        "tags": [
          "applications"
        ],
        "description": "Fetch Application using its id from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "deleted",
                  "deletedAt",
                  "deletedBy",
                  "id",
                  "name"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Application",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            },
            "links": {
              "GetTaxonomiesApplicationsChanges": {
                "operationId": "getTaxonomiesApplicationsChanges",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetEntrypoints": {
                "operationId": "getEntrypoints",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetApplicationStates": {
                "operationId": "getApplicationStates",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetEnvironments": {
                "operationId": "getEnvironments",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetDeploymentSettings": {
                "operationId": "getDeploymentSettings",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetApplicationSettings": {
                "operationId": "getApplicationSettings",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateApplication",
        "summary": "Update application.",
        "tags": [
          "applications"
        ],
        "description": "Update application in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationInput"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "deleted",
                  "deletedAt",
                  "deletedBy",
                  "id",
                  "name"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Application",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            },
            "links": {
              "GetTaxonomiesApplicationsChanges": {
                "operationId": "getTaxonomiesApplicationsChanges",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetEntrypoints": {
                "operationId": "getEntrypoints",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetApplicationStates": {
                "operationId": "getApplicationStates",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetEnvironments": {
                "operationId": "getEnvironments",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetDeploymentSettings": {
                "operationId": "getDeploymentSettings",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              },
              "GetApplicationSettings": {
                "operationId": "getApplicationSettings",
                "parameters": {
                  "where.applicationId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteApplications",
        "summary": "Delete applications.",
        "tags": [
          "applications"
        ],
        "description": "Delete one or more applications from the Database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "deleted",
                  "deletedAt",
                  "deletedBy",
                  "id",
                  "name"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Application",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{id}/taxonomiesApplicationsChangeApplicationId": {
      "get": {
        "operationId": "getTaxonomiesApplicationsChangesForApplication",
        "summary": "Get taxonomiesApplicationsChanges for application.",
        "tags": [
          "applications"
        ],
        "description": "Fetch all the taxonomiesApplicationsChanges for application from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "createdAt",
                  "id",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaxonomiesApplicationsChange"
                  }
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{id}/entrypointApplicationId": {
      "get": {
        "operationId": "getEntrypointsForApplication",
        "summary": "Get entrypoints for application.",
        "tags": [
          "applications"
        ],
        "description": "Fetch all the entrypoints for application from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "createdAt",
                  "id",
                  "path",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Entrypoint"
                  }
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{id}/applicationStates": {
      "get": {
        "operationId": "getApplicationStatesForApplication",
        "summary": "Get applicationStates for application.",
        "tags": [
          "applications"
        ],
        "description": "Fetch all the applicationStates for application from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "createdAt",
                  "id",
                  "pltVersion",
                  "state"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationState"
                  }
                }
              }
            },
            "links": {
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.applicationStateId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{id}/deploymentApplicationId": {
      "get": {
        "operationId": "getDeploymentsForApplication",
        "summary": "Get deployments for application.",
        "tags": [
          "applications"
        ],
        "description": "Fetch all the deployments for application from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "applicationStateId",
                  "bundleId",
                  "createdAt",
                  "deploymentSettingsId",
                  "generationId",
                  "id",
                  "machineId",
                  "status",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Deployment"
                  }
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetGenerationById": {
                "operationId": "getGenerationById",
                "parameters": {
                  "id": "$response.body#/generationId"
                }
              },
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              },
              "GetApplicationStateById": {
                "operationId": "getApplicationStateById",
                "parameters": {
                  "id": "$response.body#/applicationStateId"
                }
              },
              "GetDeploymentSettingById": {
                "operationId": "getDeploymentSettingById",
                "parameters": {
                  "id": "$response.body#/deploymentSettingsId"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{id}/environmentApplicationId": {
      "get": {
        "operationId": "getEnvironmentsForApplication",
        "summary": "Get environments for application.",
        "tags": [
          "applications"
        ],
        "description": "Fetch all the environments for application from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "createdAt",
                  "deleted",
                  "deletedAt",
                  "id",
                  "secretsKey",
                  "secretsStorageProvider",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Environment"
                  }
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{id}/deploymentSettings": {
      "get": {
        "operationId": "getDeploymentSettingsForApplication",
        "summary": "Get deploymentSettings for application.",
        "tags": [
          "applications"
        ],
        "description": "Fetch all the deploymentSettings for application from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "cores",
                  "createdAt",
                  "heap",
                  "id",
                  "memory",
                  "services",
                  "threads"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeploymentSetting"
                  }
                }
              }
            },
            "links": {
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.deploymentSettingsId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{id}/applicationSettings": {
      "get": {
        "operationId": "getApplicationSettingsForApplication",
        "summary": "Get applicationSettings for application.",
        "tags": [
          "applications"
        ],
        "description": "Fetch all the applicationSettings for application from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "applicationId",
                  "cores",
                  "createdAt",
                  "heap",
                  "id",
                  "memory",
                  "services",
                  "threads"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationSetting"
                  }
                }
              }
            },
            "links": {
              "GetApplicationById": {
                "operationId": "getApplicationById",
                "parameters": {
                  "id": "$response.body#/applicationId"
                }
              }
            }
          }
        }
      }
    },
    "/networkSettings/": {
      "get": {
        "operationId": "getNetworkSettings",
        "summary": "Get networkSettings.",
        "tags": [
          "network_settings"
        ],
        "description": "Fetch networkSettings from the database.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Limit will be applied by default if not passed. If the provided value exceeds the maximum allowed value a validation error will be thrown"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "totalCount",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "generationId",
                  "id",
                  "settings",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.settings.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.settings.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.settings.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.settings.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.settings.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.settings.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.settings.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.settings.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.settings.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.settings.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.settings.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.settings.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.settings.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.createdAt",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.generationId",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.id",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.settings",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "orderby.taxonomyId",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NetworkSetting"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createNetworkSetting",
        "summary": "Create networkSetting.",
        "tags": [
          "network_settings"
        ],
        "description": "Add new networkSetting to the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NetworkSettingInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A NetworkSetting",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkSetting"
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetGenerationById": {
                "operationId": "getGenerationById",
                "parameters": {
                  "id": "$response.body#/generationId"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateNetworkSettings",
        "summary": "Update networkSettings.",
        "tags": [
          "network_settings"
        ],
        "description": "Update one or more networkSettings in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NetworkSettingInput"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "generationId",
                  "id",
                  "settings",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.createdAt.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.generationId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.id.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.settings.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.settings.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.settings.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.settings.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.settings.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.settings.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.settings.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.settings.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.settings.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.settings.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.settings.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.settings.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.settings.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.eq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.neq",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.gt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.gte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.lt",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.lte",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.like",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.ilike",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.in",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.nin",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.contains",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.contained",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "where.taxonomyId.overlaps",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "where.or",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NetworkSetting"
                  }
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetGenerationById": {
                "operationId": "getGenerationById",
                "parameters": {
                  "id": "$response.body#/generationId"
                }
              }
            }
          }
        }
      }
    },
    "/networkSettings/{id}": {
      "get": {
        "operationId": "getNetworkSettingById",
        "summary": "Get NetworkSetting by id.",
        "tags": [
          "network_settings"
        ],
        "description": "Fetch NetworkSetting using its id from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "generationId",
                  "id",
                  "settings",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A NetworkSetting",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkSetting"
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetGenerationById": {
                "operationId": "getGenerationById",
                "parameters": {
                  "id": "$response.body#/generationId"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateNetworkSetting",
        "summary": "Update networkSetting.",
        "tags": [
          "network_settings"
        ],
        "description": "Update networkSetting in the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NetworkSettingInput"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "generationId",
                  "id",
                  "settings",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A NetworkSetting",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkSetting"
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetGenerationById": {
                "operationId": "getGenerationById",
                "parameters": {
                  "id": "$response.body#/generationId"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteNetworkSettings",
        "summary": "Delete networkSettings.",
        "tags": [
          "network_settings"
        ],
        "description": "Delete one or more networkSettings from the Database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "generationId",
                  "id",
                  "settings",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A NetworkSetting",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkSetting"
                }
              }
            }
          }
        }
      }
    },
    "/networkSettings/{id}/taxonomy": {
      "get": {
        "operationId": "getTaxonomyForNetworkSetting",
        "summary": "Get taxonomy for networkSetting.",
        "tags": [
          "network_settings"
        ],
        "description": "Fetch the taxonomy for networkSetting from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "closedAt",
                  "createdAt",
                  "id",
                  "main",
                  "name",
                  "stage",
                  "status"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Taxonomy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Taxonomy"
                }
              }
            },
            "links": {
              "GetTaxonomiesApplicationsChanges": {
                "operationId": "getTaxonomiesApplicationsChanges",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetEntrypoints": {
                "operationId": "getEntrypoints",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetGraphs": {
                "operationId": "getGraphs",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetGenerations": {
                "operationId": "getGenerations",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetEnvironments": {
                "operationId": "getEnvironments",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              },
              "GetNetworkSettings": {
                "operationId": "getNetworkSettings",
                "parameters": {
                  "where.taxonomyId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      }
    },
    "/networkSettings/{id}/generation": {
      "get": {
        "operationId": "getGenerationForNetworkSetting",
        "summary": "Get generation for networkSetting.",
        "tags": [
          "network_settings"
        ],
        "description": "Fetch the generation for networkSetting from the database.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "id",
                  "mainIteration",
                  "status",
                  "taxonomyId"
                ]
              }
            },
            "in": "query",
            "name": "fields",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A Generation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Generation"
                }
              }
            },
            "links": {
              "GetTaxonomyById": {
                "operationId": "getTaxonomyById",
                "parameters": {
                  "id": "$response.body#/taxonomyId"
                }
              },
              "GetDeployments": {
                "operationId": "getDeployments",
                "parameters": {
                  "where.generationId.eq": "$response.body#/id"
                }
              },
              "GetGraphs": {
                "operationId": "getGraphs",
                "parameters": {
                  "where.generationId.eq": "$response.body#/id"
                }
              },
              "GetNetworkSettings": {
                "operationId": "getNetworkSettings",
                "parameters": {
                  "where.generationId.eq": "$response.body#/id"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{id}/settings": {
      "post": {
        "operationId": "updateApplicationSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "threads": {
                    "type": "number"
                  },
                  "cores": {
                    "type": "number"
                  },
                  "memory": {
                    "type": "number"
                  },
                  "heap": {
                    "type": "number"
                  },
                  "services": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "heap": {
                          "type": "number"
                        },
                        "threads": {
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/applications/{id}/domains": {
      "get": {
        "operationId": "getApplicationDomains",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "taxonomyId",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "internalDomain": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "internalDomain"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/applications/{id}/instances": {
      "get": {
        "operationId": "getApplicationInstances",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "taxonomyId",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "instances": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "startTime": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "maximumInstanceCount": {
                      "type": "number",
                      "default": 1
                    }
                  },
                  "required": [
                    "instances",
                    "maximumInstanceCount"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/applications/{id}/url": {
      "get": {
        "operationId": "getApplicationUrl",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "taxonomyId",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "url"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/applications/{id}/expose": {
      "post": {
        "operationId": "exposeApplication",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "taxonomyId",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "url"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/applications/{id}/hide": {
      "post": {
        "operationId": "hideApplication",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "taxonomyId",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/applications/{id}/deploy": {
      "post": {
        "operationId": "deployApplication",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "taxonomyName": {
                    "type": "string",
                    "default": "main"
                  },
                  "bundleId": {
                    "type": "string"
                  },
                  "secrets": {
                    "type": "object",
                    "nullable": true,
                    "additionalProperties": {
                      "type": "string"
                    },
                    "default": null
                  },
                  "services": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name"
                      ],
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "taxonomy": {
                      "$ref": "#/components/schemas/Taxonomy"
                    },
                    "generation": {
                      "$ref": "#/components/schemas/Generation"
                    },
                    "deployErrors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "generation",
                    "deployErrors"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/applications/{id}/undeploy": {
      "post": {
        "operationId": "undeployApplication",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "taxonomyName": {
                    "type": "string",
                    "default": "main"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "taxonomy": {
                      "$ref": "#/components/schemas/Taxonomy"
                    },
                    "generation": {
                      "$ref": "#/components/schemas/Generation"
                    },
                    "deployErrors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "generation",
                    "deployErrors"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/applications/{id}/delete": {
      "post": {
        "operationId": "deleteApplication",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "steps": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "errors": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "type",
                          "description",
                          "errors"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "steps"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/applications/{id}/restore": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/applications/{id}/restart": {
      "post": {
        "operationId": "restartDeployment",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "taxonomyId",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/applications/{id}/secrets-keys": {
      "get": {
        "operationId": "getApplicationSecretsKeys",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "taxonomyId",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "full",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/applications/{id}/secrets": {
      "get": {
        "operationId": "getApplicationSecrets",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "taxonomyId",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "full",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "saveApplicationSecrets",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "secrets": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "secrets"
                ],
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "taxonomyId",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/applications/{id}/status": {
      "post": {
        "operationId": "saveApplicationStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string"
                  }
                },
                "required": [
                  "status"
                ],
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "taxonomyId",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "bundleId",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/applications/{id}/state": {
      "post": {
        "operationId": "saveApplicationState",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "metadata": {
                    "type": "object",
                    "properties": {
                      "platformaticVersion": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "platformaticVersion"
                    ]
                  },
                  "services": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "taxonomyId",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "bundleId",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/applications/{id}/scaler": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "taxonomyId",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/applications": {
      "post": {
        "operationId": "createApplication",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/changes": {
      "get": {
        "operationId": "getTaxonomiesChanges",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "taxonomyIds",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "taxonomyStages",
            "required": false
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "applicationIds",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "taxonomyId": {
                        "type": "string"
                      },
                      "applicationId": {
                        "type": "string"
                      },
                      "deploymentId": {
                        "type": "string"
                      },
                      "bundleId": {
                        "type": "string"
                      },
                      "createdAt": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "taxonomyId",
                      "applicationId",
                      "deploymentId",
                      "bundleId",
                      "createdAt"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/generations/{id}/graph": {
      "get": {
        "operationId": "getGenerationGraph",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "applications": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "services": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": true
                            }
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "services"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "links": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "source": {
                            "type": "object",
                            "properties": {
                              "applicationId": {
                                "type": "string",
                                "nullable": true
                              },
                              "serviceId": {
                                "type": "string",
                                "nullable": true
                              },
                              "telemetryId": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "applicationId",
                              "serviceId",
                              "telemetryId"
                            ],
                            "additionalProperties": false
                          },
                          "target": {
                            "type": "object",
                            "properties": {
                              "applicationId": {
                                "type": "string",
                                "nullable": true
                              },
                              "serviceId": {
                                "type": "string",
                                "nullable": true
                              },
                              "telemetryId": {
                                "type": "string"
                              },
                              "url": {
                                "type": "string",
                                "nullable": true
                              }
                            },
                            "required": [
                              "applicationId",
                              "serviceId",
                              "telemetryId",
                              "url"
                            ],
                            "additionalProperties": false
                          },
                          "requestsAmount": {
                            "type": "number",
                            "minimum": 0
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "applications",
                    "links"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/machines": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/machines/{id}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/npm-config": {
      "get": {
        "operationId": "getNpmConfig",
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "os": {
                      "type": "string"
                    },
                    "cpu": {
                      "type": "string"
                    },
                    "libc": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/taxonomies/{id}/urls": {
      "get": {
        "operationId": "getTaxonomyUrls",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "urls": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "urls"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/taxonomies/{id}/graph": {
      "get": {
        "operationId": "getMainTaxonomyGraph",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "generationId",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "applications": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "path": {
                            "type": "string",
                            "nullable": true
                          },
                          "services": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": true
                            }
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "path",
                          "services"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "links": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "source": {
                            "type": "object",
                            "properties": {
                              "applicationId": {
                                "type": "string",
                                "nullable": true
                              },
                              "serviceId": {
                                "type": "string",
                                "nullable": true
                              },
                              "telemetryId": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "applicationId",
                              "serviceId",
                              "telemetryId"
                            ],
                            "additionalProperties": false
                          },
                          "target": {
                            "type": "object",
                            "properties": {
                              "applicationId": {
                                "type": "string",
                                "nullable": true
                              },
                              "serviceId": {
                                "type": "string",
                                "nullable": true
                              },
                              "telemetryId": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "applicationId",
                              "serviceId",
                              "telemetryId"
                            ],
                            "additionalProperties": false
                          },
                          "requestsAmount": {
                            "type": "string"
                          },
                          "responseTime": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "source",
                          "target",
                          "requestsAmount",
                          "responseTime"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "applications",
                    "links"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/taxonomies/{id}/diff-graph": {
      "get": {
        "operationId": "getPreviewTaxonomyGraph",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "applications": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "path": {
                            "type": "string",
                            "nullable": true
                          },
                          "status": {
                            "type": "string"
                          },
                          "services": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": true
                            }
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "path",
                          "services"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "links": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "source": {
                            "type": "object",
                            "properties": {
                              "applicationId": {
                                "type": "string",
                                "nullable": true
                              },
                              "serviceId": {
                                "type": "string",
                                "nullable": true
                              },
                              "telemetryId": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "applicationId",
                              "serviceId",
                              "telemetryId"
                            ],
                            "additionalProperties": false
                          },
                          "target": {
                            "type": "object",
                            "properties": {
                              "applicationId": {
                                "type": "string",
                                "nullable": true
                              },
                              "serviceId": {
                                "type": "string",
                                "nullable": true
                              },
                              "telemetryId": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "applicationId",
                              "serviceId",
                              "telemetryId"
                            ],
                            "additionalProperties": false
                          },
                          "status": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "source",
                          "target",
                          "status"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "applications",
                    "links"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/taxonomies/{id}/start": {
      "post": {
        "operationId": "startTaxonomy",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/taxonomies/{id}/stop": {
      "post": {
        "operationId": "stopTaxonomy",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/taxonomies/{id}/sync": {
      "post": {
        "operationId": "syncPreviewTaxonomy",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/taxonomies/{id}/secrets": {
      "get": {
        "operationId": "getTaxonomySecrets",
        "parameters": [
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "full",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "saveTaxonomySecrets",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "secrets": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "secrets"
                ],
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/taxonomies/{id}/import": {
      "post": {
        "operationId": "importTaxonomy",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-user",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/taxonomies/{id}/export": {
      "post": {
        "operationId": "exportTaxonomy",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-user",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/taxonomies/{id}/close": {
      "post": {
        "operationId": "closeTaxonomy",
        "parameters": [
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "merge",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "/"
    }
  ]
}
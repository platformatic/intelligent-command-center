diff --git a/services/frontend/src/pages/LoginPage.jsx b/services/frontend/src/pages/LoginPage.jsx
index d043dbc4..7f2187db 100644
--- a/services/frontend/src/pages/LoginPage.jsx
+++ b/services/frontend/src/pages/LoginPage.jsx
@@ -3,14 +3,11 @@ import styles from './LoginPage.module.css'
 import typographyStyles from '~/styles/Typography.module.css'
 import commonStyles from '~/styles/CommonStyles.module.css'
 import loadingSpinnerStyles from '~/styles/LoadingSpinnerStyles.module.css'
-import { Button, Forms, LoadingSpinnerV2 } from '@platformatic/ui-components'
+import { Button, LoadingSpinnerV2 } from '@platformatic/ui-components'
 import { RICH_BLACK, WHITE } from '@platformatic/ui-components/src/components/constants'
 import Logo from '~/components/ui/Logo'
 
 function LoginControls ({ provider, loginHandler }) {
-  const [sitePassword, setSitePassword] = useState()
-  const [incorrectPasswordMessage, setIncorrectPasswordMessage] = useState('')
-
   const loginButtons = {
     google: (
       <Button
@@ -35,54 +32,6 @@ function LoginControls ({ provider, loginHandler }) {
         backgroundColor={WHITE}
         platformaticIcon={{ iconName: 'SocialGitHubIcon', color: RICH_BLACK }}
       />
-    ),
-    password: (
-      <>
-        <Forms.Input
-          name='sitePassword'
-          placeholder='Enter password...'
-          borderColor={WHITE}
-          backgroundColor={RICH_BLACK}
-          inputTextClassName={`${typographyStyles.desktopBodySmall} ${typographyStyles.textWhite}`}
-          value={sitePassword}
-          onChange={(ev) => setSitePassword(ev.target.value)}
-          errorMessage={incorrectPasswordMessage}
-        />
-        <Button
-          textClass={typographyStyles.desktopButtonSmall}
-          paddingClass={commonStyles.smallButtonPadding}
-          onClick={() => {
-            fetch(`${import.meta.env.VITE_SERVER_URL}/api/login/demo`, {
-              method: 'POST',
-              headers: { 'Content-Type': 'application/json' },
-              body: JSON.stringify({ password: sitePassword })
-            }).then(response => {
-              if (response.ok) return response.json()
-              return Promise.reject(new Error('Unable to validate password'))
-            }).then(({ success }) => {
-              if (success) window.location.href = `${import.meta.env.VITE_SERVER_URL}/api/login/demo`
-              else setIncorrectPasswordMessage('Incorrect password')
-            }).catch(err => {
-              setIncorrectPasswordMessage(err.message)
-            })
-          }}
-          label='Login'
-          bordered={false}
-          color={RICH_BLACK}
-          backgroundColor={WHITE}
-        />
-      </>
-    ),
-    demo: (
-      <Button
-        textClass={typographyStyles.desktopButtonSmall}
-        paddingClass={commonStyles.smallButtonPadding}
-        onClick={() => { window.location.href = `${import.meta.env.VITE_SERVER_URL}/api/login/demo` }}
-        label='Demo Login'
-        bordered={false}
-        color={RICH_BLACK}
-        backgroundColor={WHITE}
-      />
     )
   }
   return loginButtons[provider]
@@ -93,6 +42,8 @@ function LoginPage () {
   const supportedLogins = (import.meta.env.VITE_SUPPORTED_LOGINS ?? '')
     .split(',')
     .filter(login => !!login && login !== '')
+    // Filter out demo and password logins for OSS version
+    .filter(login => login !== 'demo' && login !== 'password')
 
   function handleLoginButton (provider) {
     setInnerLoading(true)

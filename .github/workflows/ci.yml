name: Pull requests
on: [pull_request, workflow_call, workflow_dispatch]

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: "${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
  cancel-in-progress: true

jobs:
  setup-node_modules:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4.1.0
        with:
          version: 10
      - uses: actions/setup-node@v5
        with:
          # https://github.com/actions/setup-node/blob/main/docs/advanced-usage.md#use-private-packages
          registry-url: "https://registry.npmjs.org"
          node-version: 22
          cache: "pnpm"
      - uses: "nick-fields/retry@v3.0.2"
        with:
          max_attempts: 10
          timeout_minutes: 5
          retry_on: error
          command: pnpm fetch --ignore-scripts

  lint:
    needs: setup-node_modules
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4.1.0
        with:
          version: 10
      - uses: actions/setup-node@v5
        with:
          registry-url: "https://registry.npmjs.org"
          node-version: 22
          cache: "pnpm"
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 5
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Run lint
        run: pnpm lint

  ci-scripts:
    needs: setup-node_modules
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4.1.0
        with:
          version: 10
      - uses: actions/setup-node@v5
        with:
          registry-url: "https://registry.npmjs.org"
          node-version: 22
          cache: "pnpm"
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 5
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Execute tests
        run: pnpm test:scripts

  ci-main:
    needs: setup-node_modules
    runs-on: ubuntu-latest
    timeout-minutes: 15
    services:
      cache-valkey:
        image: "valkey/valkey:9.0"
        ports:
          - "6342:6379"
      main-valkey:
        image: "valkey/valkey:9.0"
        ports:
          - "6343:6379"
      icc-postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name icc-postgres
        ports:
          - 5433:5432
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4.1.0
        with:
          version: 10
      - uses: actions/setup-node@v5
        with:
          registry-url: "https://registry.npmjs.org"
          node-version: 22
          cache: "pnpm"
      - name: Configure postgres
        run: cat ./pg-init/docker-postgres-init.sql | docker exec -i icc-postgres psql -U postgres
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 5
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Create session-key
        run: node ./services/main/node_modules/@fastify/secure-session/genkey.js > .session-key
      - name: Run test suite
        run: cd services/main && pnpm run test

  ci-user-manager:
    services:
      icc-postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name icc-postgres
        ports:
          - 5433:5432
    needs: setup-node_modules
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4.1.0
        with:
          version: 10
      - uses: actions/setup-node@v5
        with:
          registry-url: "https://registry.npmjs.org"
          node-version: 22
          cache: "pnpm"
      - name: Configure postgres
        run: cat ./pg-init/docker-postgres-init.sql | docker exec -i icc-postgres psql -U postgres
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 5
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Run test suite
        run: cd services/user-manager && pnpm run test

  ci-traffic-inspector:
    services:
      icc-postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name icc-postgres
        ports:
          - 5433:5432
      valkey:
        image: "valkey/valkey:9.0"
        ports:
          - "6343:6379"
    needs: setup-node_modules
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4.1.0
        with:
          version: 10
      - uses: actions/setup-node@v5
        with:
          registry-url: "https://registry.npmjs.org"
          node-version: 22
          cache: "pnpm"
      - name: Configure postgres
        run: cat ./pg-init/docker-postgres-init.sql | docker exec -i icc-postgres psql -U postgres
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 5
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Run test suite
        run: cd services/traffic-inspector && pnpm run test

  ci-activities:
    services:
      icc-postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name icc-postgres
        ports:
          - 5433:5432
    needs: setup-node_modules
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4.1.0
        with:
          version: 10
      - uses: actions/setup-node@v5
        with:
          registry-url: "https://registry.npmjs.org"
          node-version: 22
          cache: "pnpm"
      - name: Configure postgres
        run: cat ./pg-init/docker-postgres-init.sql | docker exec -i icc-postgres psql -U postgres
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 5
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Run test suite
        run: cd services/activities && pnpm run test

  ci-control-plane:
    needs: setup-node_modules
    runs-on: ubuntu-latest
    timeout-minutes: 15
    services:
      icc-postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: root
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name icc-postgres
        ports:
          - 5433:5432
      cache-valkey:
        image: "valkey/valkey:9.0"
        ports:
          - "6342:6379"
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4.1.0
        with:
          version: 10
      - uses: actions/setup-node@v5
        with:
          registry-url: "https://registry.npmjs.org"
          node-version: 22
          cache: "pnpm"
      - name: Configure postgres
        run: cat ./pg-init/docker-postgres-init.sql | docker exec -i icc-postgres psql -U postgres
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 5
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Run test suite
        run: cd services/control-plane && pnpm test

  ci-risk-service:
    services:
      icc-postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name icc-postgres
        ports:
          - 5433:5432

      valkey:
        image: "valkey/valkey:9.0"
        ports:
          - "6343:6379"

    needs: setup-node_modules
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4.1.0
        with:
          version: 10
      - uses: actions/setup-node@v5
        with:
          registry-url: "https://registry.npmjs.org"
          node-version: 22
      - name: Configure postgres
        run: cat ./pg-init/docker-postgres-init.sql | docker exec -i icc-postgres psql -U postgres
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 5
          retry_on: error
          command: pnpm install --frozen-lockfile
      - run: cd services/risk-service && pnpm run test

  ci-risk-cold-storage:
    services:
      icc-postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name icc-postgres
        ports:
          - 5433:5432

      valkey:
        image: "valkey/valkey:9.0"
        ports:
          - "6379:6379"

    needs: setup-node_modules
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4.1.0
        with:
          version: 10
      - uses: actions/setup-node@v5
        with:
          registry-url: "https://registry.npmjs.org"
          node-version: 22
      - name: Configure postgres
        run: cat ./pg-init/docker-postgres-init.sql | docker exec -i icc-postgres psql -U postgres
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 5
          retry_on: error
          command: pnpm install --frozen-lockfile
      - run: cd services/risk-cold-storage && pnpm run test

  ci-cache-manager:
    services:
      valkey:
        image: "valkey/valkey:9.0"
        ports:
          - "6342:6379"
    needs: setup-node_modules
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4.1.0
        with:
          version: 10
      - uses: actions/setup-node@v5
        with:
          registry-url: "https://registry.npmjs.org"
          node-version: 22
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 5
          retry_on: error
          command: pnpm install --frozen-lockfile
      - run: cd services/cache-manager && pnpm run test

  ci-cluster-manager:
    services:
      valkey:
        image: "valkey/valkey:9.0"
        ports:
          - "6342:6379"
      icc-postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name icc-postgres
        ports:
          - 5433:5432
    needs: setup-node_modules
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4.1.0
        with:
          version: 10
      - uses: actions/setup-node@v5
        with:
          registry-url: "https://registry.npmjs.org"
          node-version: 22
      - name: Configure postgres
        run: cat ./pg-init/docker-postgres-init.sql | docker exec -i icc-postgres psql -U postgres
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 5
          retry_on: error
          command: pnpm install --frozen-lockfile
      - run: cd services/cluster-manager && pnpm run test

  ci-compliance:
    services:
      icc-postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name icc-postgres
        ports:
          - 5433:5432
    needs: setup-node_modules
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v5
      # This is used to install private repos as dependency.
      - uses: pnpm/action-setup@v4.1.0
        with:
          version: 10
      - uses: actions/setup-node@v5
        with:
          registry-url: "https://registry.npmjs.org"
          node-version: 22
          cache: "pnpm"
      - name: Configure postgres
        run: cat ./pg-init/docker-postgres-init.sql | docker exec -i icc-postgres psql -U postgres
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 5
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Run test suite
        run: cd services/compliance && pnpm run test

  ci-metrics:
    needs: setup-node_modules
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v5
      # This is used to install private repos as dependency.
      - uses: pnpm/action-setup@v4.1.0
        with:
          version: 10
      - uses: actions/setup-node@v5
        with:
          registry-url: "https://registry.npmjs.org"
          node-version: 22
          cache: "pnpm"
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 5
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Run test suite
        run: cd services/metrics && pnpm run test

  ci-frontend:
    needs: setup-node_modules
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4.1.0
        with:
          version: 10
      - uses: actions/setup-node@v5
        with:
          registry-url: "https://registry.npmjs.org"
          node-version: 22
          cache: "pnpm"
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 5
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Run test suite
        run: cd services/frontend && pnpm run test
      - name: Build App
        run: cd services/frontend && pnpm run build

  ci-cron:
    services:
      icc-postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name icc-postgres
        ports:
          - 5433:5432
    needs: setup-node_modules
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4.1.0
        with:
          version: 10
      - uses: actions/setup-node@v5
        with:
          registry-url: "https://registry.npmjs.org"
          node-version: 22
      - name: Configure postgres
        run: cat ./pg-init/docker-postgres-init.sql | docker exec -i icc-postgres psql -U postgres
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 5
          retry_on: error
          command: pnpm install --frozen-lockfile
      - run: cd services/cron && pnpm run test

  ci-scaler:
    services:
      main-valkey:
        image: "valkey/valkey:9.0"
        ports:
          - "6343:6379"
      icc-postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name icc-postgres
        ports:
          - 5433:5432
    needs: setup-node_modules
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4.1.0
        with:
          version: 10
      - uses: actions/setup-node@v5
        with:
          registry-url: "https://registry.npmjs.org"
          node-version: 22
      - name: Configure postgres
        run: cat ./pg-init/docker-postgres-init.sql | docker exec -i icc-postgres psql -U postgres
      - name: pnpm install
        uses: nick-fields/retry@v3.0.2
        with:
          max_attempts: 10
          timeout_minutes: 5
          retry_on: error
          command: pnpm install --frozen-lockfile
      - run: cd services/scaler && pnpm run test

name: Release

run-name: ${{ github.event_name == 'repository_dispatch' && 'OSS Release (triggered by commercial release)' || 'OSS Release (manual)' }}

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to release from"
        required: false
        default: "main"
        type: string
      version:
        description: "Version to release (e.g., 1.0.0, leave empty to use package.json version)"
        required: false
        type: string
  repository_dispatch:
    types: [trigger-release]

jobs:
  test:
    uses: ./.github/workflows/ci.yml
    secrets: inherit

  release:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch || 'main' }}
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Determine source branch and tag
        id: source
        run: |
          # Use input version or read from package.json
          if [ -n "${{ inputs.version }}" ]; then
            VERSION="${{ inputs.version }}"
            echo "Using input version: $VERSION"
          else
            VERSION=$(node -p "require('./package.json').version")
            echo "Using package.json version: $VERSION"
          fi
          echo "TAG_NAME=v${VERSION}" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.OSS_ICC_DOCKER_TOKEN }}

      - name: Set repository name
        run: |
          echo "REPOSITORY_NAME=$(basename $GITHUB_REPOSITORY)" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: platformatic/${{ env.REPOSITORY_NAME }}:latest,platformatic/${{ env.REPOSITORY_NAME }}:${{ env.TAG_NAME }}
          build-args: |
            ICC_COMMIT_BRANCH=main
            ICC_COMMIT_HASH=${{ github.sha }}
            ICC_BUILD_TIME=${{ github.event.repository.updated_at }}

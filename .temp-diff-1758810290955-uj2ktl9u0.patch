diff --git a/scripts/install.sh b/scripts/install.sh
index bd6e4742..56193fba 100755
--- a/scripts/install.sh
+++ b/scripts/install.sh
@@ -17,7 +17,6 @@ VALKEY_APPS_ADDRESS="${VALKEY_APPS_ADDRESS:-}"
 KUBE_CONTEXT="${KUBE_CONTEXT:-}"
 PUBLIC_URL="${PUBLIC_URL:-}"
 PROMETHEUS_URL="${PROMETHEUS_URL:-}"
-DOCKER_TOKEN="${DOCKER_TOKEN:-}"
 
 # Test mode to bypass external dependencies
 TEST_MODE="${TEST_MODE:-}"
@@ -32,7 +31,6 @@ GITHUB_OAUTH_CLIENT_ID="${GITHUB_OAUTH_CLIENT_ID:-}"
 GITHUB_OAUTH_CLIENT_SECRET="${GITHUB_OAUTH_CLIENT_SECRET:-}"
 GOOGLE_OAUTH_CLIENT_ID="${GOOGLE_OAUTH_CLIENT_ID:-}"
 GOOGLE_OAUTH_CLIENT_SECRET="${GOOGLE_OAUTH_CLIENT_SECRET:-}"
-DISABLE_ICC_OAUTH="${DISABLE_ICC_OAUTH:-}"
 VALID_EMAILS="${VALID_EMAILS:-}"
 
 # Required software
@@ -51,7 +49,6 @@ OPTIONS:
     --valkey-apps ADDRESS           Valkey/Redis address for applications (optional)
     --public-url URL                Public URL for ICC access (optional)
     --prometheus URL                Prometheus server URL (optional)
-    --docker-token TOKEN            Docker access token (optional)
     --kube-context CONTEXT          Kubernetes context name (optional)
 
     ELASTICACHE CONFIGURATION:
@@ -67,7 +64,6 @@ OPTIONS:
     --google-oauth-client-id ID     Google OAuth client ID (optional)
     --google-oauth-client-secret SECRET Google OAuth client secret (optional)
     --valid-emails EMAILS           Comma-separated list of valid email addresses (optional)
-    --disable-icc-oauth             Disable OAuth and use demo authentication only (optional)
 
     -h, --help                      Show this help message
 
@@ -76,9 +72,7 @@ If not provided, you will be prompted to enter required values.
 OAuth Configuration:
 - If OAuth credentials are provided, the respective authentication method will be enabled
 - If partial OAuth credentials are provided (only ID or secret), you'll be prompted for the missing part
-- If no OAuth credentials are provided, you'll be prompted to configure at least one authentication method
-- When OAuth is configured, demo authentication is automatically disabled
-- Use --disable-icc-oauth to skip OAuth setup and use only demo authentication
+- If no OAuth credentials are provided, you will be prompted to configure at least one authentication method
 
 EXAMPLES:
     Interactive mode:
@@ -91,7 +85,6 @@ EXAMPLES:
         --valkey-apps "redis://localhost:6380" \\
         --public-url "https://icc.example.com" \\
         --prometheus "http://prometheus:9090" \\
-        --docker-token "docker_token..." \\
         --kube-context "my-cluster" \\
         --gh-oauth-client-id "your_github_client_id" \\
         --gh-oauth-client-secret "your_github_client_secret"
@@ -103,7 +96,6 @@ EXAMPLES:
         --valkey-apps "redis://localhost:6380" \\
         --public-url "https://icc.example.com" \\
         --prometheus "http://prometheus:9090" \\
-        --docker-token "docker_token..." \\
         --kube-context "my-cluster" \\
         --github-oauth-client-id "your_github_client_id" \\
         --github-oauth-client-secret "your_github_client_secret" \\
@@ -117,23 +109,10 @@ EXAMPLES:
         --valkey-apps "redis://localhost:6380" \\
         --public-url "https://icc.example.com" \\
         --prometheus "http://prometheus:9090" \\
-        --docker-token "docker_token..." \\
         --kube-context "my-cluster" \\
         --elasticache-role-arn "arn:aws:iam::123456789012:role/ElasticacheRole" \\
         --elasticache-region "us-west-2" \\
         --elasticache-cluster-name "my-elasticache-cluster" \\
-        --disable-icc-oauth
-
-    Demo authentication only (no OAuth):
-    ./$SCRIPT_NAME \\
-        --pg-superuser "postgresql://user:pass@host:5432" \\
-        --valkey-icc "redis://localhost:6379" \\
-        --valkey-apps "redis://localhost:6380" \\
-        --public-url "https://icc.example.com" \\
-        --prometheus "http://prometheus:9090" \\
-        --docker-token "docker_token..." \\
-        --kube-context "my-cluster" \\
-        --disable-icc-oauth
 
 EOF
 }
@@ -186,10 +165,6 @@ parse_arguments() {
 			PROMETHEUS_URL="$2"
 			shift 2
 			;;
-		--docker-token)
-			DOCKER_TOKEN="$2"
-			shift 2
-			;;
 		--gh-oauth-client-id | --github-oauth-client-id)
 			GITHUB_OAUTH_CLIENT_ID="$2"
 			shift 2
@@ -222,10 +197,6 @@ parse_arguments() {
 			VALID_EMAILS="$2"
 			shift 2
 			;;
-		--disable-icc-oauth)
-			DISABLE_ICC_OAUTH="true"
-			shift 1
-			;;
 		-h | --help)
 			show_usage
 			exit 0
@@ -283,20 +254,6 @@ validate_public_url() {
 	return 0
 }
 
-# Validate Docker token format
-validate_docker_token() {
-	local token="$1"
-	if [[ -z "$token" ]]; then
-		error "Docker token cannot be empty."
-		return 1
-	fi
-	if [[ ${#token} -lt 20 ]]; then
-		error "Docker token appears too short (minimum 20 characters)."
-		return 1
-	fi
-	return 0
-}
-
 # Validate OAuth client ID format
 validate_oauth_client_id() {
 	local client_id="$1"
@@ -535,15 +492,6 @@ prompt_public_url() {
 		"validate_public_url"
 }
 
-prompt_docker_token() {
-	prompt_input "DOCKER_TOKEN" \
-		"ICC requires a Docker access token for image pull access" \
-		"Enter your Docker access token: " \
-		"validate_docker_token" \
-		"true" \
-		"Token needs 'packages:read' permission for ghcr.io access"
-}
-
 # OAuth configuration prompts
 prompt_github_oauth_client_id() {
 	prompt_input "GITHUB_OAUTH_CLIENT_ID" \
@@ -1011,12 +959,6 @@ handle_elasticache_configuration() {
 
 # OAuth configuration logic
 handle_oauth_configuration() {
-	# If OAuth is disabled, skip all OAuth configuration
-	if [[ "$DISABLE_ICC_OAUTH" == "true" ]]; then
-		info "ICC OAuth disabled, using demo authentication only"
-		return 0
-	fi
-
 	local github_partial=false
 	local google_partial=false
 	local has_any_oauth=false
@@ -1094,25 +1036,6 @@ handle_oauth_configuration() {
 	return 0
 }
 
-# Validate OAuth flag conflicts
-validate_oauth_conflicts() {
-	if [[ "$DISABLE_ICC_OAUTH" == "true" ]]; then
-		local conflicts=()
-
-		[[ -n "$GITHUB_OAUTH_CLIENT_ID" ]] && conflicts+=("--gh-oauth-client-id/--github-oauth-client-id")
-		[[ -n "$GITHUB_OAUTH_CLIENT_SECRET" ]] && conflicts+=("--gh-oauth-client-secret/--github-oauth-client-secret")
-		[[ -n "$GOOGLE_OAUTH_CLIENT_ID" ]] && conflicts+=("--google-oauth-client-id")
-		[[ -n "$GOOGLE_OAUTH_CLIENT_SECRET" ]] && conflicts+=("--google-oauth-client-secret")
-
-		if [[ ${#conflicts[@]} -gt 0 ]]; then
-			error "Cannot use --disable-icc-oauth with OAuth configuration flags: ${conflicts[*]}"
-			error "Choose either --disable-icc-oauth for demo mode or provide OAuth credentials, not both."
-			return 1
-		fi
-	fi
-	return 0
-}
-
 # Check if ICC is already installed via Helm
 check_existing_installation() {
 	info "Checking for existing ICC installation..."
@@ -1219,9 +1142,6 @@ main() {
 	if ! check_existing_installation; then
 		fatal "Installation check failed"
 	fi
-	if ! validate_oauth_conflicts; then
-		fatal "Conflicting authentication flags provided"
-	fi
 	if ! check_requirements; then
 		fatal "Requirements check failed"
 	fi
@@ -1234,7 +1154,6 @@ main() {
 
 	# Handle remaining input validation
 	validate_or_prompt "PUBLIC_URL" "prompt_public_url" "validate_public_url" "public URL"
-	validate_or_prompt "DOCKER_TOKEN" "prompt_docker_token" "validate_docker_token" "Docker token"
 
 	# Handle OAuth configuration
 	info "Configuring authentication methods..."
@@ -1306,57 +1225,34 @@ main() {
 	# Build OAuth configuration parameters
 	local helm_oauth_args=()
 
-	# If OAuth is disabled, force demo mode
-	if [[ "$DISABLE_ICC_OAUTH" == "true" ]]; then
+	# Configure GitHub OAuth if provided
+	if [[ -n "$GITHUB_OAUTH_CLIENT_ID" && -n "$GITHUB_OAUTH_CLIENT_SECRET" ]]; then
 		helm_oauth_args+=(
-			"--set" "services.icc.login_methods.github.enable=false"
-			"--set" "services.icc.login_methods.google.enable=false"
-			"--set" "services.icc.login_methods.demo.enable=true"
+			"--set" "services.icc.login_methods.github.enable=true"
+			"--set" "services.icc.login_methods.github.client_id=$GITHUB_OAUTH_CLIENT_ID"
+			"--set" "services.icc.login_methods.github.client_secret=$GITHUB_OAUTH_CLIENT_SECRET"
+			"--set" "services.icc.login_methods.github.valid_emails=$VALID_EMAILS"
 		)
-		info "Forcing demo authentication (OAuth disabled)"
+		info "Enabling GitHub OAuth authentication"
 	else
-		# Configure GitHub OAuth if provided
-		if [[ -n "$GITHUB_OAUTH_CLIENT_ID" && -n "$GITHUB_OAUTH_CLIENT_SECRET" ]]; then
-			helm_oauth_args+=(
-				"--set" "services.icc.login_methods.github.enable=true"
-				"--set" "services.icc.login_methods.github.client_id=$GITHUB_OAUTH_CLIENT_ID"
-				"--set" "services.icc.login_methods.github.client_secret=$GITHUB_OAUTH_CLIENT_SECRET"
-				"--set" "services.icc.login_methods.github.valid_emails=$VALID_EMAILS"
-			)
-			info "Enabling GitHub OAuth authentication"
-		else
-			helm_oauth_args+=(
-				"--set" "services.icc.login_methods.github.enable=false"
-			)
-		fi
-
-		# Configure Google OAuth if provided
-		if [[ -n "$GOOGLE_OAUTH_CLIENT_ID" && -n "$GOOGLE_OAUTH_CLIENT_SECRET" ]]; then
-			helm_oauth_args+=(
-				"--set" "services.icc.login_methods.google.enable=true"
-				"--set" "services.icc.login_methods.google.client_id=$GOOGLE_OAUTH_CLIENT_ID"
-				"--set" "services.icc.login_methods.google.client_secret=$GOOGLE_OAUTH_CLIENT_SECRET"
-				"--set" "services.icc.login_methods.google.valid_emails=$VALID_EMAILS"
-			)
-			info "Enabling Google OAuth authentication"
-		else
-			helm_oauth_args+=(
-				"--set" "services.icc.login_methods.google.enable=false"
-			)
-		fi
+		helm_oauth_args+=(
+			"--set" "services.icc.login_methods.github.enable=false"
+		)
+	fi
 
-		# Disable demo mode if any OAuth is configured
-		if [[ -n "$GITHUB_OAUTH_CLIENT_ID" || -n "$GOOGLE_OAUTH_CLIENT_ID" ]]; then
-			helm_oauth_args+=(
-				"--set" "services.icc.login_methods.demo.enable=false"
-			)
-			info "Disabling demo authentication (OAuth enabled)"
-		else
-			helm_oauth_args+=(
-				"--set" "services.icc.login_methods.demo.enable=true"
-			)
-			info "Keeping demo authentication enabled (no OAuth configured)"
-		fi
+	# Configure Google OAuth if provided
+	if [[ -n "$GOOGLE_OAUTH_CLIENT_ID" && -n "$GOOGLE_OAUTH_CLIENT_SECRET" ]]; then
+		helm_oauth_args+=(
+			"--set" "services.icc.login_methods.google.enable=true"
+			"--set" "services.icc.login_methods.google.client_id=$GOOGLE_OAUTH_CLIENT_ID"
+			"--set" "services.icc.login_methods.google.client_secret=$GOOGLE_OAUTH_CLIENT_SECRET"
+			"--set" "services.icc.login_methods.google.valid_emails=$VALID_EMAILS"
+		)
+		info "Enabling Google OAuth authentication"
+	else
+		helm_oauth_args+=(
+			"--set" "services.icc.login_methods.google.enable=false"
+		)
 	fi
 
 	if ! helm install platformatic oci://ghcr.io/platformatic/helm \
@@ -1364,9 +1260,7 @@ main() {
 		--create-namespace \
 		--namespace platformatic \
 		--set "cloud=$cloud_provider" \
-		--set "imagePullSecret.user=platformatic" \
-		--set "imagePullSecret.token=${DOCKER_TOKEN}" \
-		--set "services.icc.image.repository=platformatic/enterprise-icc" \
+		--set "services.icc.image.repository=platformatic/intelligent-command-center" \
 		--set "services.icc.image.tag=latest" \
 		--set "services.icc.database_url=$new_postgres_url" \
 		--set "services.icc.public_url=$PUBLIC_URL" \
